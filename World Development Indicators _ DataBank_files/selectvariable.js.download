////function needs to be removed later
//function logTimeConsumed(item, starttime) {
//    var endtime = new Date();

//    //debugger;
//    starttime = starttime.toDateString() + " " + starttime.toLocaleTimeString();
//    endtime = endtime.toDateString() + " " + endtime.toLocaleTimeString();

//    $.ajax({
//        type: "POST",
//        async: true,
//        url: gbl_report_methods + "/TimeLogger",
//        contentType: "application/json; charset=utf-8",
//        data: "{item: '" + item + "', starttime: '" + starttime + "', endtime: '" + endtime + "'}",
//        dataType: "json",
//        success: function (data) {
//            console.log(starttime + " -> " + endtime + " : " + data.d);
//        },
//        error: function (XMLHttpRequest, textStatus, errorThrown) {
//            window.location.href = gbl_error_file;
//        }
//    });
//}

var selectionItemStr = "<li>  <input type='checkbox' checked='checked' class='chkSelectElement' id='selected_";

var oldList = "";

var customIndicatorLi = "<li class='selected'> <a href='javascript:void(0)' onclick='viewMetaData(this)'><span class='metadataIcon sprite icon-info'></span></a>  <span class='glyphicon glyphicon-plus-sign plusIcon'></span> <input type='checkbox' checked='checked' class='chkSelectElement' id='select_";
var customIndicatorLiMiddle = "</span>  <a href='javascript:void(0)'  class='editLnk'";
var customIndicatorLiTail = ">Edit</a></li>";

var agentWidth = 0;

var gbl_array_data = {};
var gbl_high_freequencyenabled;
var gbl_high_frequency_array_data = {};
var gbl_time_control_Id;
var gbl_time_target_Id;
var gbl_array_member_list = {};
var gbl_array_member_selected = {};
var gblselectionChanged = {};
var gbl_array_member_selected_clone = {};
var gbl_array_book_attributes;
var threshold = 3000;
var gbl_subnationalHierarchy;
var gbl_start_var = 1;
var gbl_end_var = threshold;
var gbl_remove_search = false;
var gbl_display_list = {};
var gbl_hierarchy = '';

var startText = "";
var endText = "";

var gbl_start_var_time = 1;
var gbl_end_var_time = threshold;
var gbl_selected_time_dim_tab;
var timeDimArray = [];
var liCounter = 0;
var timePaging = false;
var isdownloadlimit = false;
var gbl_SubnationalFilter = false;
var gbl_SubnationalLevelData = [];
var gbl_subnationalTotalCount = 0;

/**************************************************************************************************************************************************/
/********************************************Initialization for select variable********************************************************************/
/**************************************************************************************************************************************************/
function initSelectVariables() {
    initMetadataView();
}

$(document).ready(function () {
    moveAddMoreLinksToRHS();
    initMetadataView();

    initSearch();

    initJumpToList();
    initSelectAll();
    initSelectMembers();
    setIframeDimension();

    initCustomPeriodSettings();
    if(gbl_HasIndicatorUnit)
    initBookAttributes();

    $(document).resize(function () {
        if ($(document).width < 1024) {           
            $("body").css({ "width": "1024px", "overflow-x": "auto" });
        }
    });
    triggerClickOnEnter();  

    $("#btnMapRegion").off('click');
    $("#btnMapRegion").on('click', function () {
        buildSelectFilter('Region');
    });
    
    $("li.addMoreHiddenDiv").off('click');
    $('li.addMoreHiddenDiv').on('click', function () {
        CloseOpenedTimeSection();
    });

    $("#btnMapIncome").off('click');
    $("#btnMapIncome").on('click', function () {
        buildSelectFilter('Income');
    });

    $("#selCustomTime_From").off('change');
    $("#selCustomTime_From").change(function () { 
        if ($("#selCustomTime_To").val() < $("#selCustomTime_From").val()) {
            alert('From year must less than or equal to To year');
            $("#selCustomTime_From").val($("#selCustomTime_From option:first").val());
            return false;
        }
        var dimtype = $(this).parents(".panel").find(".availableView").attr("data-type");       
        TrackFeature('Variables->' + getPanelHeading(this) + '->Create Time Function->Span->From Time');  
    });

    $("#selCustomTime_To").off('change');
    $("#selCustomTime_To").change(function () {
        if ($("#selCustomTime_To").val() < $("#selCustomTime_From").val()) {
            alert('To year must greater than or equal to From year');
            $("#selCustomTime_To").val($("#selCustomTime_To option:first").val());
            return false;
        }
        var dimtype = $(this).parents(".panel").find(".availableView").attr("data-type");
        TrackFeature('Variables->' + getPanelHeading(this) + '->Create Time Function->Span->To Time');  
    });
    
    $("body").on("click", "#liMetadataDownloadAdvanced", function () {
        setActiveTab("#lblAllMetadata", "#allAvailableMetadata");
    });

    $("#upReportDD select").off('change');
    $("#upReportDD select").change(function (obj) {   
        if (obj.currentTarget.selectedOptions != null && obj.currentTarget.selectedOptions.length > 0)
            TrackFeature('Variables->Load Table data for->' + obj.currentTarget.selectedOptions[0].text);
    });
    

    $('span.icon-help').off('click');
    $('span.icon-help').click(function(obj){
        var dataTarget;
        if(obj.target != null && obj.target.parentElement != null)
            dataTarget = obj.target.parentElement.getAttribute('data-target');

        if(dataTarget == '#customIndicatorHelpText')
            TrackFeature('Variables->Custom indicator Help Text');  
        else if(dataTarget == '#aggHelpTxt')
            TrackFeature('Variables->Aggregation Help Text');  
        else if(dataTarget == '#timeFunctionHelpTxt')
            TrackFeature('Variables->Custom time Help Text'); 
        else if(dataTarget == '#customGroupHelpText')
            TrackFeature('Variables->Custom Country Help Text');  

    });
    toggleFilterHierarchy();
    filterCountryAggregates();

    $("body").addClass(gbl_common_culture);
});

/**************************************************************************************************************************************************/
/********************************************Dimension Apply changes*******************************************************************************/
/**************************************************************************************************************************************************/
function doAjaxPostbackVariables(reporttype) {
    //debugger;
    var dimensiondetails = $('#hdnSelectVars').val().replace(/'/g, "\\'");
    var newdimensiondetails = null;

    $.ajax({
        type: "POST",
        async: false, //keep this false for now. we need to do some operations after the apply changes based on the result
        url: gbl_report_methods + "/SetDimensionMembers",
        contentType: "application/json; charset=utf-8",
        data: "{reporttype: '" + reporttype + "', dimensiondetails: '" + dimensiondetails + "'}",
        dataType: "json",
        success: function (data) {
            newdimensiondetails = data.d;
        },
        error: function (XMLHttpRequest, textStatus, errorThrown) {
            window.location.href = gbl_error_file;
        }
    });

    return newdimensiondetails;
}

function onUpdateVarsClick() {   
    var time_dim = false;   
    if (hasclearedallselections(true)) {    
        return false;
    }

    var maxlimitexceeded = checkvariablelimit();
    if (maxlimitexceeded) {

        $(".formatList #liTable,.formatList #liTable a").addClass("disabled");
        $(".formatList #liTable,.formatList #liTable a").removeClass("active");
        $(".formatList #liChart,.formatList #liChart a").addClass("disabled");
        $(".formatList #liMap,.formatList #liMap a").addClass("disabled");
        $(".formatList #liMetadata,.formatList #liMetadata a").addClass("disabled");
        $("#faded").show();
        $(".downloadMsg").show();
        if ($(".selectionModifyTxt").is(":visible"))
            $(".selectionModifyTxt").hide();
        if ($('#divNoDataToDisplay').is(":visible"))
            $("#divNoDataToDisplay").hide();
        return false;
    }
    else {
        $(".formatList #liTable,.formatList #liTable a").removeClass("disabled");
        $(".formatList #liChart,.formatList #liChart a").removeClass("disabled");
        $(".formatList #liMap,.formatList #liMap a").removeClass("disabled");
        $(".formatList #liMetadata,.formatList #liMetadata a").removeClass("disabled");
        $("#faded").hide();
        $(".downloadMsg").hide();
    }

    $('#upReportDD').show();
    $('#cbpReportView').show();
    $('#divNoDataToDisplay').hide();

    var selectedvars = $.map(gbl_array_member_selected, function (selectedmembers, controlid) {
               
        var selectedorder = [];      
       
        $('#tbl_sel_' + controlid + ' li').each(function (ind, obj) {
            selectedorder.push($(obj).attr('uniqueid'));
        });

        var aggregationruleall = null;
        //aggregation rule for all currently we set it here
        if ($('#tbl_' + controlid).attr('data-type') == "S" && $('#tb-indicatorAggRule tbody tr').length > 0 && $('#lblApplyAll').hasClass('active')) {
            aggregationruleall = {
                AggregationMethod: $('#divApplyAll table select.aggrmethod').val(),
                AggregationPer: $('#divApplyAll table input.txt-percen').val()
            };
        }

        var member_clone_order = {};
        var memberdetails = $.map(selectedorder, function (val, ind) {            
            //aggregation rule for each currently we set it here
            var aggrset = false;
            if ($('#tbl_' + controlid).attr('data-type') == "S" && $('#tb-indicatorAggRule tbody tr').length > 0 && $('#lblChooseForAll').hasClass('active')) {
                selectedmembers[val].AggregationRule = {
                    AggregationMethod: $('#tb-indicatorAggRule tbody tr[uniqueid="' + val + '"] select.aggrmethod').val(),
                    AggregationPer: $('#tb-indicatorAggRule tbody tr[uniqueid="' + val + '"] input.txt-percen').val()
                };
                aggrset = true;
            }

            member_clone_order[val] = selectedmembers[val];

            return {
                uniquename: val,
                displayname: selectedmembers[val].displayname,
                iscustom: selectedmembers[val].custom,
                customdefinition: (selectedmembers[val].custom ? selectedmembers[val].customdefinition : null),
                AggregationRule: (aggrset ? selectedmembers[val].AggregationRule : null)
            };
        });

        gbl_array_member_selected_clone[controlid] = jQuery.extend(true, {}, member_clone_order);

        return { controlid: controlid, memberdetails: memberdetails, aggregationruleall: aggregationruleall };
    });

    $('#hdnSelectVars').val(JSON.stringify(selectedvars));

    if ($('#hdnReportType').val() == 'METADATA') {
        return getSelectedMetaAttribs();
    }
    return true;
}

function updatevariablesfordownload() {
    //debugger;
    var selectedvars = $.map(gbl_array_member_selected, function (selectedmembers, controlid) {
        //debugger;
        var selectedorder = [];
        $('#tbl_sel_' + controlid + ' li').each(function (ind, obj) {
            selectedorder.push($(obj).attr('uniqueid'));
        });

        
        var aggregationruleall = null;
        //aggregation rule for all currently we set it here
        if ($('#tbl_' + controlid).attr('data-type') == "S" && $('#tb-indicatorAggRule tbody tr').length > 0 && $('#lblApplyAll').hasClass('active')) {
            aggregationruleall = {
                AggregationMethod: $('#divApplyAll table select.aggrmethod').val(),
                AggregationPer: $('#divApplyAll table input.txt-percen').val()
            };
        }

        var memberdetails = $.map(selectedorder, function (val, ind) {           
            var aggrset = false;
            if ($('#tbl_' + controlid).attr('data-type') == "S" && $('#tb-indicatorAggRule tbody tr').length > 0 && $('#lblChooseForAll').hasClass('active')) {
                selectedmembers[val].AggregationRule = {
                    AggregationMethod: $('#tb-indicatorAggRule tbody tr[uniqueid="' + val + '"] select.aggrmethod').val(),
                    AggregationPer: $('#tb-indicatorAggRule tbody tr[uniqueid="' + val + '"] input.txt-percen').val()
                };
                aggrset = true;
            }

            return {
                uniquename: val,
                displayname: selectedmembers[val].displayname,
                iscustom: selectedmembers[val].custom,
                customdefinition: (selectedmembers[val].custom ? selectedmembers[val].customdefinition : null),
                AggregationRule: (aggrset ? selectedmembers[val].AggregationRule : null)
            };
        });
        
        return { controlid: controlid, memberdetails: memberdetails, aggregationruleall: aggregationruleall };
    });   
    $('#hdnSelectVars').val(JSON.stringify(selectedvars));
    setSelectedVariables();
}

function setSelectedVariables() {

    var result = "";
    $.ajax({
        type: "POST",
        async: false,
        url: gbl_select_variables_url,
        cache: false,
        data: $("#hdnSelectVars").serialize(),
        success: function (data, textStatus) {
            result = data;
        },
        error: function (XMLHttpRequest, textStatus, errorThrown) {
            result = XMLHttpRequest.responseText;
        }
    });

    return result;
}


function checkvariablelimit() {
    var totalSelection = 1;
    $('.selectionCount').each(function (index, obj) {
        var controlid = $(obj).parents(".panel").find(".selectedView").attr('id');
        if ($(obj).parents(".panel").attr('id') == 'zoomModalHeader')
            totalSelection = parseInt(totalSelection * obj.textContent || obj.innerText);
        if (controlid == null) return;
        controlid = controlid.replace('tbl_sel_', '');
        if (controlid == 'MetaAttr' || controlid == 'DBList') return;

        totalSelection = parseInt(totalSelection * obj.textContent || obj.innerText);
    });
    if (totalSelection > gbl_report_Cell_Limit) {
        if (!gbl_common_internal && totalSelection > gbl_download_Cell_Limit) {
            $(".downloadMsg").text(gbl_msg_report_Download_Limit.replace('__', totalSelection));
            isdownloadlimit = true;
            $(".downloadMsg").removeClass("topRightDisplay");
        }
        else {
            $(".downloadMsg").text(gbl_msg_report_Cell_Limit.replace('__', totalSelection));
            $(".downloadMsg").addClass("topRightDisplay");
        }
        return true;
    }
    else
        return false;
}


/**************************************************************************************************************************************************/
/********************************************Dimension Listing Functions***************************************************************************/
/**************************************************************************************************************************************************/
function loadAvailableList(controlid, hierarchy, obj) {
    //debugger;
    var dimtype;
    var dimobj = $(obj).parents('.panel-heading').find('.panel-title a')[0];

    var dimdata = gbl_array_data[controlid + '_' + hierarchy];

    if (dimdata != null)
        dimtype = dimdata.DT;
    else {
        if (dimobj != null && ((dimobj.innerText != null && dimobj.innerText.trim() == "Time") || dimobj.title == "Add Time"))
            dimtype = "T";
    }

    if(gbl_high_freequencyenabled && dimtype == "T"){
        $('#highfreequencytab').show();
        $('#lblSlider').show();
        $('div#slider-range').show();
    }
    loadDimensionList(controlid, hierarchy, dimobj);
    if(gbl_high_freequencyenabled && dimtype == "T"){
        document.getElementById("hfAnualTab").click();
    }
}

function loadSelectedList(controlid, hierarchy, obj) {
    //debugger;    
    var dimtype;
    var dimobj = $(obj).parents('.panel-heading').find('.panel-title a')[0];
    
    var dimdata = gbl_array_data[controlid + '_' + hierarchy];

    if (dimdata != null)
        dimtype = dimdata.DT;
    else {
        if (dimobj != null && ((dimobj.innerText != null && dimobj.innerText.trim() == "Time") || dimobj.title == "Add Time"))
            dimtype = "T";
    }

    if(gbl_high_freequencyenabled && dimtype == "T"){
        $('#highfreequencytab').hide();
        $('#lblSlider').hide();
        $('div#slider-range').hide();
    }
    loadDimensionList(controlid, hierarchy, dimobj);
}

function loadDimensionList(controlid, hierarchy, obj) {
    var dimtype;    

    if (obj != null && !$(obj).hasClass('collapsed') && !$(obj).hasClass('addMoreRHS')) {
        $(obj).parents('.panel-heading').find('.toggleSelectionViews a').removeClass('active');
        return;
    }    

    $('#report-loading').show();

    var dimdata = gbl_array_data[controlid + '_' + hierarchy];

    if (dimdata != null)
        dimtype = dimdata.DT;
    else {
        if (obj != null && ((obj.innerText != null && obj.innerText.trim() == "Time") || obj.title == "Add Time"))
            dimtype = "T";
        else
            dimtype = $("#tbl_" + controlid).attr("data-type");
    }   

    TrackFeature("Variables->" + getPanelHeading(obj)); 

    if (dimdata == null) {
        gbl_array_data[controlid + '_' + hierarchy] = 'Loading'; //to avoid double loading

        if ($('#hdnSubnationalPagination').val() && $('#hdnSubnationalPagination').val().trim().toUpperCase() == "Y")
            gbl_subnational_pagination = true;
        else
            gbl_subnational_pagination = false;

        if ($('#hdnSubnationalSingleView').val() && $('#hdnSubnationalSingleView').val().trim().toUpperCase() == "Y")
            gbl_subnational_singleView = true;
        else
            gbl_subnational_singleView = false;
        

        var starttime = new Date();
        var ajaxData;
        var ajaxUrl;
        if (gbl_subnational_pagination && gbl_CubeIsSubnational && dimtype === "C") {           
            gbl_subnationalHierarchy = hierarchy;
            ajaxUrl = gbl_report_methods + "/GetDimensionByLevelJSON";
            ajaxData = "{cubeid: '" + $('#hdnCubeID').val() + "', controlid: '" + controlid + "', hierarchy: '" + hierarchy + "', level: 0, parentcode: '',filtername:'',searchkey:''}";
        }
        else{
            ajaxUrl = gbl_report_methods + "/GetDimensionJSON";
            ajaxData = "{cubeid: '" + $('#hdnCubeID').val() + "', controlid: '" + controlid + "', hierarchy: '" + hierarchy + "'}";
        }
        $.ajax({
            type: "POST",
            async: true,
            url: ajaxUrl,
            contentType: "application/json; charset=utf-8",
            data: ajaxData,
            dataType: "json",
            success: function (data) {
                dimtype = data.d.DT;

                if (dimtype == "T") {
                    gbl_time_control_Id = controlid;
                    gbl_time_target_Id = "#tbl_" + controlid;
                }                 

                if (data.d !== null) {
                    if (dimtype === "C") {
                        gbl_SubnationalFilter = data.d.SubNationalEnabled;
                        if (gbl_SubnationalFilter) {
                            if (gbl_subnational_pagination && data.d.LevelCount.length > 0)
                            {
                                gbl_subnationalTotalCount = data.d.LevelCount.reduce((a, b) => a + b, 0);
                            }
                            if(gbl_subnational_pagination)
                                $('.dimension-hierarchy-' + controlid).attr('disabled', "disabled");// Need only list hierarchy in case of subnational Pagination

                            showSubnationals(controlid, data.d, hierarchy);
                        }
                    }   
                    if (data.d.HighFrequencyEnabled === true && dimtype === "T") {
                        gbl_high_freequencyenabled = true;
                        gbl_high_frequency_array_data = data.d.HighFrequencyMembers;
                        $('.customPagination').hide();
                        gbl_array_data[controlid + '_' + hierarchy] = data.d;

                        GenerateHFControls();
                        if (data.d.HighFrequencyMembers != null && data.d.HighFrequencyMembers["A"] != null) {
                            $('#hfAnualTab').show();
                            controlid = gbl_time_control_Id + "_Year";
                            createDimensionList(controlid, hierarchy, true, true, "A");
                        }

                        if (data.d.HighFrequencyMembers != null && data.d.HighFrequencyMembers["Q"] != null) {
                            $('#hfQuarterlyTab').show();
                            controlid = gbl_time_control_Id + "_Quater";
                            createDimensionList(controlid, hierarchy, true, true, "Q");
                        }

                        if (data.d.HighFrequencyMembers != null && data.d.HighFrequencyMembers["M"] != null) {
                            $('#hfMonthlyTab').show();
                            controlid = gbl_time_control_Id + "_Month";
                            createDimensionList(controlid, hierarchy, true, true, "M");
                        }

                        if (data.d.HighFrequencyMembers != null && data.d.HighFrequencyMembers["W"] != null) {
                            $('#hfWeeklyTab').show();
                            controlid = gbl_time_control_Id + "_Week";
                            createDimensionList(controlid, hierarchy, true, true, "W");
                        }

                        if (data.d.HighFrequencyMembers != null && data.d.HighFrequencyMembers["D"] != null) {
                            $('#hfDailyTab').show();
                            controlid = gbl_time_control_Id + "_Day";
                            createDimensionList(controlid, hierarchy, true, true, "D");
                        }                       
                        SetDefaultTab(data.d.HighFrequencyMembers);
                        LoadCustomTime(data.d.Members);
                    }
                    else {
                        $('#timedimvariableList ul.availableView').show();
                        $('#hfvariableList').hide();
                        $('#HighFequencyFilter').hide();
                        if (data.d.HighFrequencyEnabled == true)
                            gbl_high_freequencyenabled = true;                        
                        gbl_array_data[controlid + '_' + hierarchy] = data.d;
                        createDimensionList(controlid, hierarchy, true);                        
                    }
                }
                $('#report-loading').hide();
                initDragDrop();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                gbl_array_data[controlid + '_' + hierarchy] = null;
                $('#report-loading').hide();
                window.location.href = gbl_error_file;
            }
        });
    }
    else {
        if (gbl_high_freequencyenabled == true && dimtype == "T") {
            $('#hfvariableList').show();
            $('#HighFequencyFilter').show();
            SetDefaultTab(dimdata.HighFrequencyMembers);
            LoadCustomTime(dimdata.Members);
        }
        else if (gbl_SubnationalFilter && dimtype == "C") { 
            //if (!dimdata.CL)
                $('#newSelection_' + controlid + ' #SubNAtionalButtonGrp').show();
            $('#newSelection_' + controlid + ' .SubnationalAvailableView').show();
        }  

        if (gbl_high_freequencyenabled && $('#tbl_' + controlid).attr('data-type') == "T")
            dimdata = gbl_array_data[gbl_time_control_Id + '_' + hierarchy];
        else
            dimdata = gbl_array_data[controlid + '_' + hierarchy];

        if (obj == null)
            createDimensionList(controlid, hierarchy, true);//if we call the function from filter then only we need to repopulate 
        else if (dimdata.HasDimensionFiltering && dimdata.Parentdimension != null && gblselectionChanged[dimdata.Parentdimension]) {
            gblselectionChanged[dimdata.Parentdimension] = false;
            createDimensionList(controlid, hierarchy, true);
        }

        $('#report-loading').hide();
    }
}

function LoadSubNationalChildren(controlid, hierarchy, level, parentcode,searchKey,filterNames)
{
    $('#report-loading').show();
    var subNatdata = {};
    var ajaxUrl = gbl_report_methods + "/GetDimensionByLevelJSON";
    var ajaxData = "{cubeid: '" + $('#hdnCubeID').val() + "', controlid: '" + controlid + "', hierarchy: '" + hierarchy + "', level: " + level + ", parentcode: '" + parentcode + "',filtername:'" + filterNames+ "', searchkey:'" + searchKey + "'}";
    $.ajax({
        type: "POST",
        async: false,
        url: ajaxUrl,
        contentType: "application/json; charset=utf-8",
        data: ajaxData,
        dataType: "json",
        success: function (data) {
            if (data && data.d && data.d.Members)
                subNatdata = data.d.Members;
            $('#report-loading').hide();
        },
        error: function (XMLHttpRequest, textStatus, errorThrown) {
            gbl_array_data[controlid + '_' + hierarchy] = null;
            $('#report-loading').hide();
            window.location.href = gbl_error_file;
        }
    });
    return subNatdata;
}

function SetDefaultTab(hfData)
{
    if (hfData != null && hfData["A"] != null) {
        document.getElementById("hfAnualTab").click(); 
    }
    else if (hfData != null && hfData["Q"] != null) {
        document.getElementById("hfQuarterlyTab").click(); 
    }
    else if (hfData != null && hfData["M"] != null) {
        document.getElementById("hfMonthlyTab").click(); 
    }
    else if (hfData != null && hfData["W"] != null) {
        document.getElementById("hfWeeklyTab").click(); 
    }
    else if (hfData != null && hfData["D"] != null) {
        document.getElementById("hfDailyTab").click(); 
    }

}

function GenerateHFControls() {
    $('#timedimvariableList ul.availableView').hide();
    $('#hfAnualTab').hide();
    $('#hfQuarterlyTab').hide();
    $('#hfMonthlyTab').hide();
    $('#hfWeeklyTab').hide();
    $('#hfDailyTab').hide();
    $('#HighFequencyFilter div.hierarchy').hide();
    
    $('#hfvariableList').show();
    $('#highfreequencytab').show();  
    $('#HighFequencyFilter').show();
}

function openTab(evt, tabName) {
    var sliderMax;
    var endText;
    var startText;

    $('div#HighFequencyFilter input.filter-check').prop("checked", false);//Clear the filter selection
    gbl_selected_time_dim_tab = tabName;
    if(tabName == "hfyear"){
        startText = gbl_high_frequency_array_data["A"][0]['Name'];
        endText = gbl_high_frequency_array_data["A"][gbl_high_frequency_array_data["A"].length - 1]['Name'];
        $("#year").text(endText + " - " + startText);
        sliderMax = gbl_high_frequency_array_data["A"].length;    
        $('div.variableFilter').hide();
        if ($("#zoomModalBody").find(".variableList"))
            $("#zoomModalBody").find(".variableList").width('100%');
        $('#lblSlider').show();
        $('#slider-range').show();       
        initSlider(1, sliderMax)
    }
    else if(tabName == "hfquater"){
        startText = gbl_high_frequency_array_data["Q"][0]['Name'];
        endText = gbl_high_frequency_array_data["Q"][gbl_high_frequency_array_data["Q"].length - 1]['Name'];
        $("#year").text(endText + " - " + startText);
        sliderMax = gbl_high_frequency_array_data["Q"].length;
        $('div.variableFilter').show();
        $('span.toggleListText:contains("Annual")').parents('li.showTab').show();
        $('span.toggleListText:contains("Quarterly")').parents('li.showTab').hide();
        $('span.toggleListText:contains("Monthly")').parents('li.showTab').hide();
        $('span.toggleListText:contains("Weekly")').parents('li.showTab').hide();
        //if ($("#zoomModalBody").find(".variableList") && $("#zoomModalBody .modal-leftCol") && $("#zoomModalBody").find(".filterTree"))
            //$("#zoomModalBody").find(".variableList").width($("#zoomModalBody .modal-leftCol").width() - $("#zoomModalBody").find(".filterTree").width() - 5 + "px");    
        $('#lblSlider').hide();
        $('#slider-range').hide();        
    }
    else if(tabName == "hfmonth"){
        startText = gbl_high_frequency_array_data["M"][0]['Name'];
        endText = gbl_high_frequency_array_data["M"][gbl_high_frequency_array_data["M"].length - 1]['Name'];
        $("#year").text(endText + " - " + startText);
        sliderMax = gbl_high_frequency_array_data["M"].length;
        $('div.variableFilter').show();
        $('span.toggleListText:contains("Annual")').parents('li.showTab').show();
        $('span.toggleListText:contains("Quarterly")').parents('li.showTab').show();
        $('span.toggleListText:contains("Monthly")').parents('li.showTab').hide();
        $('span.toggleListText:contains("Weekly")').parents('li.showTab').hide();
        //if ($("#zoomModalBody").find(".variableList") && $("#zoomModalBody .modal-leftCol") && $("#zoomModalBody").find(".filterTree"))
            //$("#zoomModalBody").find(".variableList").width($("#zoomModalBody .modal-leftCol").width() - $("#zoomModalBody").find(".filterTree").width() - 5 + "px"); 
        $('#lblSlider').hide();
        $('#slider-range').hide();        
    }
    else if(tabName == "hfweek"){
        startText = gbl_high_frequency_array_data["W"][0]['Name'];
        endText = gbl_high_frequency_array_data["W"][gbl_high_frequency_array_data["W"].length - 1]['Name'];
        $("#year").text(endText + " - " + startText);
        sliderMax = gbl_high_frequency_array_data["W"].length;
        $('div.variableFilter').show();
        $('span.toggleListText:contains("Annual")').parents('li.showTab').show();
        $('span.toggleListText:contains("Quarterly")').parents('li.showTab').show();
        $('span.toggleListText:contains("Monthly")').parents('li.showTab').show();
        $('span.toggleListText:contains("Weekly")').parents('li.showTab').hide();
        //if ($("#zoomModalBody").find(".variableList") && $("#zoomModalBody .modal-leftCol") && $("#zoomModalBody").find(".filterTree"))
            //$("#zoomModalBody").find(".variableList").width($("#zoomModalBody .modal-leftCol").width() - $("#zoomModalBody").find(".filterTree").width() - 5 + "px"); 
        $('#lblSlider').hide();
        $('#slider-range').hide();        
    }
    else if(tabName == "hfday"){
        startText = gbl_high_frequency_array_data["D"][0]['Name'];
        endText = gbl_high_frequency_array_data["D"][gbl_high_frequency_array_data["D"].length - 1]['Name'];
        $("#year").text(endText + " - " + startText);
        sliderMax = gbl_high_frequency_array_data["D"].length;
        $('div.variableFilter').show();
        $('span.toggleListText:contains("Annual")').parents('li.showTab').show();
        $('span.toggleListText:contains("Quarterly")').parents('li.showTab').show();
        $('span.toggleListText:contains("Monthly")').parents('li.showTab').show();
        $('span.toggleListText:contains("Weekly")').parents('li.showTab').show();
        //if ($("#zoomModalBody").find(".variableList") && $("#zoomModalBody .modal-leftCol") && $("#zoomModalBody").find(".filterTree"))
            //$("#zoomModalBody").find(".variableList").width($("#zoomModalBody .modal-leftCol").width() - $("#zoomModalBody").find(".filterTree").width() - 5 + "px"); 
        $('#lblSlider').hide();
        $('#slider-range').hide();        
    }    
    var i, tabcontent, tablinks;
    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
    }
    tablinks = document.getElementsByClassName("highfreequencytablinks");
    for (i = 0; i < tablinks.length; i++) {
        tablinks[i].className = tablinks[i].className.replace(" active", "");
    }
    document.getElementById(tabName).style.display = "block";
    if (evt !=null)
        evt.currentTarget.className += " active";
    else
        $('#hfAnualTab').addClass("active");

    TrackFeature("Select High Frequency filter");
}


function GetHighFrequencyControlId(id)
{
    if (gbl_selected_time_dim_tab == "hfyear") {
        id = id + "_Year";     
    }
    else if (gbl_selected_time_dim_tab == "hfquater") {
        id = id + "_Quater";    
    }
    else if (gbl_selected_time_dim_tab == "hfmonth") {
        id = id + "_Month";        
    }
    else if (gbl_selected_time_dim_tab == "hfweek") {
        id = id + "_Week";        
    }
    else if (gbl_selected_time_dim_tab == "hfday") {
        id = id + "_Day";        
    }
    return id;
}

function GetHighFrequencyTargetId(id){
    if (gbl_selected_time_dim_tab == "hfyear") {        
        id = id + "_Year";        
    }
    else if (gbl_selected_time_dim_tab == "hfquater") {        
        id = id + "_Quater";
    }
    else if (gbl_selected_time_dim_tab == "hfmonth") {        
        id = id + "_Month";        
    }
    else if (gbl_selected_time_dim_tab == "hfweek") {        
        id = id + "_Week";        
    }
    else if (gbl_selected_time_dim_tab == "hfday") {        
        id = id + "_Day";
    }
    return id;
}
               
function GetHighFrequencyDataSource(){
    var timedataSourse;
    if (gbl_selected_time_dim_tab == "hfyear") {        
        timedataSourse = gbl_high_frequency_array_data["A"];
    }
    else if (gbl_selected_time_dim_tab == "hfquater") {        
        timedataSourse = gbl_high_frequency_array_data["Q"];
    }
    else if (gbl_selected_time_dim_tab == "hfmonth") {        
        timedataSourse = gbl_high_frequency_array_data["M"];
    }
    else if (gbl_selected_time_dim_tab == "hfweek") {        
        timedataSourse = gbl_high_frequency_array_data["W"];
    }
    else if (gbl_selected_time_dim_tab == "hfday") {        
        timedataSourse = gbl_high_frequency_array_data["D"];
    }
    return timedataSourse;
}

function GetFilteredSelectedResult(obj, type) {
    var result = {};
    Object.keys(obj).filter(function (key) {
        if (obj[key] && obj[key].MemberType == type) {
            result[key] = obj[key];
        }
    });
    return result; 
}

function IsHighFrequencyControlID(key)
{
    if (key == gbl_time_control_Id + "_Year" || key == gbl_time_control_Id + "_Quater" || key == gbl_time_control_Id + "_Month" ||
        key == gbl_time_control_Id + "_Week" || key == gbl_time_control_Id + "_Day")
    {
        return true;
    }
    return false;
}

function CombineSelectedResults(obj)
{    
    var result = 0;
    Object.keys(obj).filter(function (key) {
        if (IsHighFrequencyControlID(key) && obj[key] && Object.keys(obj[key]).length > 0) {
            result = result + Object.keys(obj[key]).length;
        }
    });
    return result; 
} 

function GetAllHighFrequencyDataLength(obj)
{
    var length = 0;
    if (obj[gbl_time_control_Id + "_Year"])
        length = length + obj[gbl_time_control_Id + "_Year"].length
    if (obj[gbl_time_control_Id + "_Quater"])
        length = length + obj[gbl_time_control_Id + "_Quater"].length
    if (obj[gbl_time_control_Id + "_Month"])
        length = length + obj[gbl_time_control_Id + "_Month"].length
    if (obj[gbl_time_control_Id + "_Week"])
        length = length + obj[gbl_time_control_Id + "_Week"].length
    if (obj[gbl_time_control_Id + "_Day"])
        length = length + obj[gbl_time_control_Id + "_Day"].length
    return length;
}

function CombinedTimeDimensionsValues(obj,controlId)
{
    var memDetails = [];
    var dimFound = false;
    for (var i = 0; i < obj.length; i++)
    {
        if (obj[i].controlid == controlId + "_Year" || obj[i].controlid == controlId + "_Month" || obj[i].controlid == controlId + "_Quater" ||
            obj[i].controlid == controlId + "_Week" || obj[i].controlid == controlId + "_Day")
        {
            memDetails = memDetails.concat(obj[i].memberdetails);
            delete obj[i];
        }
    }

    for (var i = 0; i < obj.length; i++) {
        if (obj[i] !=null && obj[i].controlid == controlId) {
            obj[i].memberdetails = memDetails;
            dimFound = true;
        }
    }

    if (!dimFound)
    {
        obj.push({ controlid: controlId, memberdetails: memDetails, aggregationruleall: null });
    }

    return obj  
}

function createDimensionList(controlid, hierarchy, showPlusIcon,highFrequency,memberType) {
    var targetId = "#tbl_" + controlid;
    var dimdata;

    if (gbl_high_freequencyenabled && $('#tbl_' + controlid).attr('data-type') == "T")
        dimdata = Object.assign({}, gbl_array_data[gbl_time_control_Id + '_' + hierarchy]);
    else
        dimdata = Object.assign({}, gbl_array_data[controlid + '_' + hierarchy]);

    if (dimdata == null) return;

    if (gbl_high_freequencyenabled && $('#tbl_' + controlid).attr('data-type') == "T") {
        if (gbl_array_member_selected[gbl_time_control_Id] == null) {
            gbl_array_member_selected[gbl_time_control_Id] = dimdata.Sel;   //GetFilteredSelectedResult(dimdata.Sel, memberType);
            GenarateAdobeDimensions(gbl_time_control_Id);
            gbl_array_member_selected_clone[gbl_time_control_Id] = jQuery.extend(true, {}, dimdata.Sel);
        }
    }
    else {
        if (gbl_array_member_selected[controlid] == null) {
            gbl_array_member_selected[controlid] = dimdata.Sel;
            GenarateAdobeDimensions(controlid);
            gbl_array_member_selected_clone[controlid] = jQuery.extend(true, {}, dimdata.Sel);
        }
    }

    if (dimdata.HasDimensionFiltering && dimdata.Parentdimension != null)
        dimdata.Members = FilterParentCodes(controlid, hierarchy);// filter based on parent dimension

    initFilter(controlid, hierarchy, targetId, showPlusIcon, dimdata);
    if (dimdata.CL && dimdata.Levels != null && dimdata.CHL.length > 0) {
        loadClassificationFilter(controlid, hierarchy, targetId, showPlusIcon, dimdata.CHL);
    }
    else {
        loadFilter(controlid, hierarchy, targetId, showPlusIcon, dimdata.Levels);
    }    

    if (dimdata.CL) {
        
        var allMemberList;
        if (dimdata.Aggr != null)
            allMemberList = $.merge($.merge([], dimdata.Members), dimdata.Aggr);
        else
            allMemberList = dimdata.Members;

        var allJTL;
        if (dimdata.JTLA != null)
            allJTL = $.merge($.merge([], dimdata.JTL), dimdata.JTLA);
        else
            allJTL = dimdata.JTL;
        
        if (!(dimdata.DT == "C" && gbl_SubnationalFilter))
        {
            sortAllSelectedItems($("#tbl_" + controlid), true);
            loadDimMembers(controlid, targetId, showPlusIcon, allMemberList, allJTL, false);
        }
        else {
            loadDimMembers(controlid, targetId, showPlusIcon, allMemberList, allJTL, false);
            var subnationalid = "div#CtryAgg_Classification_" + controlid + " label.CtryAgg_Classification[data-value='Aggregates']";
            if ($(subnationalid)) $(subnationalid).text("Subnational");
        }        
    }
    else {
        if (highFrequency == true) {
            switch (memberType) {
                case "A":
                    loadDimMembers(controlid, "#tbl_" + controlid, showPlusIcon, dimdata.HighFrequencyMembers["A"], dimdata.JTL, false);
                    break;
                case "Q":
                    loadDimMembers(controlid, "#tbl_" + controlid, showPlusIcon, dimdata.HighFrequencyMembers["Q"], dimdata.JTL, false);
                    break;
                case "M":
                    loadDimMembers(controlid, "#tbl_" + controlid, showPlusIcon, dimdata.HighFrequencyMembers["M"], dimdata.JTL, false);
                    break;
                case "W":
                    loadDimMembers(controlid, "#tbl_" + controlid, showPlusIcon, dimdata.HighFrequencyMembers["W"], dimdata.JTL, false);
                    break;
                case "D":
                    loadDimMembers(controlid, "#tbl_" + controlid, showPlusIcon, dimdata.HighFrequencyMembers["D"], dimdata.JTL, false);
                    break;
            }
        }
        else
                loadDimMembers(controlid, targetId, showPlusIcon, dimdata.Members, dimdata.JTL, false);
        
    }

    getSelectedMembers(controlid, targetId);

    //For the auto selection of all members
    if (dimdata.AutoSelect && (dimdata.Sel == null || Object.keys(dimdata.Sel).length == 0))
        getAutoSelect(controlid, targetId);
}

function FilterParentCodes(controlid, hierarchy)
{
    var parentdim,selectedParentDimension, dimensiondata;
    var selectedDimensionCode = [], filteredmembers = [], parentdimList = [], dimension = [];
    
    if (gbl_high_freequencyenabled && $('#tbl_' + controlid).attr('data-type') == "T")
        dimensiondata = gbl_array_data[gbl_time_control_Id + '_' + hierarchy];
    else
        dimensiondata = gbl_array_data[controlid + '_' + hierarchy];

    selectedParentDimension = gbl_array_member_selected[dimensiondata.Parentdimension];
    if (selectedParentDimension != null && Object.keys(selectedParentDimension).length > 0) {        
        var selecteddimensionKeys = Object.keys(selectedParentDimension);
        for (var i = 0; i < selecteddimensionKeys.length; i++) {
            dimension = selecteddimensionKeys[i].split('&');
            if (dimension !== null && dimension.length > 1 ) {
                dimension = dimension[1].slice(1, -1); // Removing  [] from dimension code
                selectedDimensionCode.push(dimension);// create an array of selected dimenion codes
            }
        }

        if (selectedDimensionCode.length > 0)
        {
            for (var j = 0; j < dimensiondata.Members.length; j++)
            {                
                parentdim = dimensiondata.Members[j].ParentMember;
                if (parentdim != null) {
                    parentdimList = parentdim.split(',');
                    if (parentdimList != null && parentdimList.length > 0 && parentdimList.some(item => item != null && selectedDimensionCode.includes(item.trim())))
                        filteredmembers.push(dimensiondata.Members[j]);
                }
            }
            return filteredmembers;
        }
    }
    
    return dimensiondata.Members;// if there is no filtering, return the actual data itself
    
}

function loadDimMembers(controlid, targetId, showPlusIcon, memberlist, jumptolist, fromsearch, fromClassification) {
    var selectedMembers;
    if (memberlist === null) {
        if (memberlist === null) {
            $.ajax({
                type: "POST",
                url: gbl_basepath + "AjaxServices/AjaxReportMethods.asmx/GetExceptionOperationID",
                contentType: "application/json; charset=utf-8",
                data: "",
                dataType: "json",
                success: function (data) {
                    if (data.d) {
                        alert(`Failed to load members. Either session expired or unable to process the database. Please contact the administrator. \n Error ID: ${data.d}`);
                    } else {
                        alert('Failed to load members. Either session expired or unable to process the database. Please contact the administrator.');
                    }
                    return;
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $('#report-loading').hide();
                    window.location.href = gbl_error_file;
                }
            });
        }
        return;
    }

    var dimType = $(targetId).attr('data-type');

    //below variable is used for search funcionality
    if (!fromsearch) {
        gbl_array_member_list[controlid] = memberlist;
        //hide the search clear button
        $(targetId).parents(".panel").find(".searchResults").hide();
    }

    if (gbl_high_freequencyenabled && dimType == "T")
        selectedMembers = gbl_array_member_selected[gbl_time_control_Id];
    else
        selectedMembers = gbl_array_member_selected[controlid];

    if (selectedMembers === null) selectedMembers = {};
    var isdblist = controlid === "DBList";

    $('#ulJumpToList_' + controlid).html('');
    if (jumptolist !== null) {
        $.each(jumptolist, function (index, value) {
            $('#ulJumpToList_' + controlid).append('<li class="jumpTo"><a href="javascript:void(0)">' + value + '</a></li>');
        });
    }

    gbl_display_list[controlid] = memberlist;
    

    if (dimType === "T") {
        stringBuilder_Time(controlid, targetId, showPlusIcon, gbl_display_list[controlid]);
        if (gbl_high_freequencyenabled) {
            var length = GetAllHighFrequencyDataLength(gbl_display_list);
            if ($(targetId).parents(".panel").hasClass('modal-body'))
                $(targetId).parents(".modal-content").find(".availableCount").text(length);
            else
                $(targetId).parents(".panel").find(".availableCount").text(length);
        }
        timeDimArray = gbl_display_list[controlid];
        if (!gbl_high_freequencyenabled && gbl_selected_time_dim_tab == "hfyear")
            initSlider(1, timeDimArray.length);
        createPagerDropdown(controlid, timeDimArray);
    } else {
        if (dimType === "C" && gbl_SubnationalFilter)
            SubnationalOnload(memberlist, controlid, targetId, fromsearch, fromClassification);
        else
            stringBuilder(controlid, targetId, showPlusIcon, gbl_display_list[controlid]);  
        
        createPagerDropdown(controlid, gbl_display_list[controlid]);
    }
}

function initPagination() {

    $("body").on("click", ".showNext", function () {
        var controlid = $(this).attr("data-source");
        var targetId = $(this).attr("target-id");
        var inputId = $(this).attr("data-input");
        var showMetadata = eval($(this).attr("metadata"));
        var customOptions = eval($(this).attr("custom-option"));

        gbl_start_var = gbl_end_var;
        gbl_end_var = gbl_end_var + threshold;

        if (gbl_subnational_pagination && gbl_SubnationalFilter && $("#tbl_" + controlid).attr("data-type") === "C"){
            var currentTabLevel = $('#SubNAtionalButtonGrp label.active').attr('Level');
            openSubNationalTab(null, currentTabLevel);
        }
        else {
            stringBuilder(controlid, targetId, false, gbl_display_list[controlid]);
        }

        var goToVal = eval($("#goTo_" + controlid).val()) + 1;
        $(".goTo").val(goToVal);
    });

    $("body").on("click", ".showPrev", function () {
        var controlid = $(this).attr("data-source");
        var targetId = $(this).attr("target-id");
        var inputId = $(this).attr("data-input");
        var showMetadata = eval($(this).attr("metadata"));
        var customOptions = eval($(this).attr("custom-option"));

        gbl_start_var = gbl_start_var - threshold;
        gbl_end_var = gbl_start_var + threshold;
        
        if (gbl_subnational_pagination && gbl_SubnationalFilter && $("#tbl_" + controlid).attr("data-type") === "C") {
            var currentTabLevel = $('#SubNAtionalButtonGrp label.active').attr('Level');
            openSubNationalTab(null, currentTabLevel);
        }
        else {
            stringBuilder(controlid, targetId, false, gbl_display_list[controlid]);
        }
        var goToVal = eval($("#goTo_" + controlid).val()) - 1;
        $(".goTo").val(goToVal);
    });


    $("body").on("click", ".showNext_Time", function () {
        var controlid = $(this).attr("data-source");
        var targetId = $(this).attr("target-id");
        var inputId = $(this).attr("data-input");
        var showMetadata = eval($(this).attr("metadata"));
        var customOptions = eval($(this).attr("custom-option"));

        gbl_start_var_time = gbl_end_var_time;
        gbl_end_var_time = gbl_end_var_time + threshold;
        stringBuilder_Time(controlid, targetId, false, timeDimArray);
        var goToVal = eval($("#goTo_" + controlid).val()) + 1;
    });

    $("body").on("click", ".showPrev_Time", function () {
        var controlid = $(this).attr("data-source");
        var targetId = $(this).attr("target-id");
        var inputId = $(this).attr("data-input");
        var showMetadata = eval($(this).attr("metadata"));
        var customOptions = eval($(this).attr("custom-option"));

        gbl_start_var_time = gbl_start_var_time - threshold;
        gbl_end_var_time = gbl_start_var_time + threshold;
        stringBuilder_Time(controlid, targetId, false, timeDimArray);
        var goToVal = eval($("#goTo_" + controlid).val()) - 1;
        $(".goTo").val(goToVal);
    });


    $("body").on("click", ".range", function () {
        $(this).parents(".panel").find(".unselectAll").trigger("click");
        $(".selectedDimensionTime  .searchResults ").show();
        $("div.variableListWrapper div.searchResults ").show();
        var controlid = $(this).attr("data-source");
        var targetId = $(this).attr("target-id");
        var dataSource = gbl_array_member_list[controlid];
        var range = eval($(this).attr("data-range"));
      
        if (gbl_high_freequencyenabled == true && $('#tbl_' + controlid).attr('data-type') == "T") {
                controlid = GetHighFrequencyControlId(controlid);
                targetId = GetHighFrequencyTargetId(targetId);
                dataSource = GetHighFrequencyDataSource();                
        }

        var items = dataSource.slice(0, range);

        timeDimArray = items;
        stringBuilder_Time(controlid, targetId, false, items);
        if (gbl_high_freequencyenabled && $('#tbl_' + controlid).attr('data-type') == "T" && gbl_selected_time_dim_tab == "hfyear" )
            initSlider(1, timeDimArray.length);
        setTimeout(function () {
            $("#slider-range").parents(".panel").find(".selectAll").trigger("click");
        }, 10);

    });


    $("body").on("change", ".goTo", function () {
        var pageNumber = eval($(this).val());
        var controlid = $(this).attr("data-source");
        var targetId = $(this).attr("target-id");

        var dimType = controlid.split("_")[1];
        if (dimType == "Time") {
            gbl_start_var_time = pageNumber * threshold - threshold;
            gbl_end_var_time = pageNumber * threshold;

            timeDimArray = gbl_display_list[controlid];
            stringBuilder_Time(controlid, targetId, false, timeDimArray);
            if (gbl_high_freequencyenabled && gbl_selected_time_dim_tab == "hfyear")
                initSlider(1, timeDimArray.length);   

        } else {
            gbl_start_var = pageNumber * threshold - threshold;
            gbl_end_var = pageNumber * threshold;
            if (gbl_subnational_pagination && gbl_SubnationalFilter && $("#tbl_" + controlid).attr("data-type") === "C") {
                var currentTabLevel = $('#SubNAtionalButtonGrp label.active').attr('Level');
                openSubNationalTab(null, currentTabLevel);
            }
            else {
                stringBuilder(controlid, targetId, false, gbl_display_list[controlid]);
            }
        }
    });

    $('.availableCount').off('click');
    $('.availableCount').on('click', function () {
        $(this).parents(".toggleSelectionViews").find(".showAvailable").trigger('click');
        var dataType = $(this).parents(".panel").find('ul.selectedView').attr('data-type');
        if (dataType == "C" && gbl_SubnationalFilter)
        {
            openSubNationalTab(null, "All");
        }
        TrackFeature("Variables->" + getPanelHeading(this) + "->Select available dimensions");
    });

    $('.selectionCount').off('click');
    $('.selectionCount').on('click', function () {
        $(this).parents(".toggleSelectionViews").find(".showSelected").trigger('click');
        var dataType = $(this).parents(".panel").find('ul.selectedView').attr('data-type');
        TrackFeature("Variables->" + getPanelHeading(this) + "->Show selected dimensions");
    });
}

function stringBuilder(controlid, targetId, showPlusIcon, memberlist) {

  
    var loopStart = 0;
    var loopEnd = 0;

    var dataSource = {
        dataType: "json",
        dataFields: [
                        { name: 'ID', type: 'string' },
                        { name: 'Code', type: 'string' },
                        { name: 'Name', type: 'string' },
                        { name: 'JTC', type: 'string' },
                        { name: 'SM', type: 'boolean' },
                        { name:'IsPublic', type:'string'},
                        { name:'S_LC', type:'string'},
                        
                    ],
        localdata: memberlist
    };

    var selectedMembers = gbl_array_member_selected[controlid];
    if (selectedMembers == null) selectedMembers = {};
    var isdblist = controlid == "DBList";
    var dataAdapter = new $.jqx.dataAdapter(dataSource, {
        loadComplete: function (records) { 
            var records = dataAdapter.records;
            var length = records.length;
            var html = "", html_ddlto = "", html_ddlfrom = "";
            var dimtype = $(targetId).attr('data-type');
            var ulhtml = "";
            var alphabetSet = [];
            var subnationalAlphabetSet = [];
            if (length > 0) {
                if (length < threshold) {
                    loopStart = 0;
                    loopEnd = length;  
                    $("#selectedDimension_" + controlid + " .customPagination").hide();
                }
                else {
                    loopStart = gbl_start_var;
                    loopEnd = gbl_end_var;
                    $("#selectedDimension_" + controlid + " .customPagination").show();
                    $("#selectedDimension_" + controlid + " .totalCount").text(length);

                    if (gbl_start_var <= 1) {
                        $("#selectedDimension_" + controlid + " .showPrev").attr("disabled", "disabled");
                        loopStart = 0;
                    }
                    else {
                        $("#selectedDimension_" + controlid + " .showPrev").attr("disabled", false);
                    }

                    if (gbl_end_var < length) {
                        $("#selectedDimension_" + controlid + " .showNext").attr("disabled", false);
                    }
                    else {
                        gbl_end_var = length;
                        $("#selectedDimension_" + controlid + " .showNext").attr("disabled", "disabled");
                        loopEnd = length;
                    }
                }

                $("#selectedDimension_" + controlid + " .start").text(loopStart + 1);
                $("#selectedDimension_" + controlid + " .end").text(loopEnd);
                if (dimtype == 'T') {
                }
                else {
                    for (var i = loopStart; i < loopEnd; i++) {
                        var record = records[i];
                        var alphabet = record['JTC'];
                        var isSelected = selectedMembers[record['ID']] != null;
                        var selectedclass = "";
                        var selectedchecked = "";
                        var lihtml = "";
                        if (isSelected) {
                            selectedchecked = "checked='checked'";
                            if (gbl_SubnationalFilter && dimtype == 'C' && ($('#searchBox_' + controlid).val() == '' || gbl_remove_search)) {
                                if (record['S_LC'] === null || record['S_LC'].toUpperCase() === 'NULL' || record['S_LC'] === '') {
                                    selectedclass = "class='selected national'";
                                }
                                else {
                                    selectedclass = "class='selected subnational'";
                                }
                            }
                            else {
                                selectedclass = "class='selected'";                                
                            }
                        }
                        else {
                            if (gbl_SubnationalFilter && dimtype == 'C' && ($('#searchBox_' + controlid).val() == '' || gbl_remove_search)) {
                                if (record['S_LC'] === null || record['S_LC'].toUpperCase() === 'NULL' || record['S_LC'] === '') {
                                    selectedclass = "class='national'";
                                }
                                else {
                                    selectedclass = "class='subnational'";
                                }
                            }
                        }

                        if (isdblist) {
                            lihtml = "<li alphabet= '" + alphabet + "' " + selectedclass + " uniqueId='" + record['ID'] + "' source='" + record['Name'] + "'>";
                            lihtml += "<a data-text=\"Metadata for " + record['Name'] + "\" href='#dbMetadata' data-toggle='modal' data-target='#dbMetadata'><span title='View Metadata' class='metadataIcon1 sprite icon-info' IsPublic='"+ record['IsPublic'] +"' data-value-code='" + record['ID'] + "'></span></a>";
                            lihtml += "<input name='databaseName' type='radio' id='radio" + record['ID'] + "' class='radioSelectElement' " + selectedchecked + "/>";
                        }
                        else {
                            if (gbl_SubnationalFilter && dimtype == 'C' && ($('#searchBox_' + controlid).val() == '' || gbl_remove_search)) {
                                if (record['S_LC'] === null || record['S_LC'].toUpperCase() === 'NULL' || record['S_LC'] === '') {
                                    lihtml = "<li alphabet= '" + alphabet + "' " + selectedclass + "parent = '"+ record['Code'] + "'" + " uniqueId='" + record['ID'].replace(/\'/g, "%27") + "'>";
                                    lihtml += "<div class='nationalHeader'><span class='closed caret-n' title='Click here to view subnationals'></span> " + record['Name'];
                                    lihtml += "<div class='btn-group pull-right'><a class='btn selectAllSub btn-default' title='Select all subnationals'><span class='glyphicon  glyphicon-check'></span></a> <a class='btn unselectAllSub btn-default' title='Unselect all subnationals'><span class='glyphicon glyphicon-remove'></span></a></div></div>";
                                    lihtml += "<div class='nationalName'>";
                                    subnationalAlphabetSet = subnationalAlphabetSet + record['JTC'] + ",";
                                }
                                else {
                                    lihtml = "<li alphabet= '' " + selectedclass + "child = '" + record['S_LC'] + "'" + " uniqueId='" + record['ID'].replace(/\'/g, "%27") + "'>";
                                }
                            }
                            else {
                                lihtml = "<li alphabet= '" + alphabet + "' " + selectedclass + " uniqueId='" + record['ID'].replace(/\'/g, "%27") + "'>";
                            }
                            if (record['SM']) {

                                lihtml += "<a data-text=\"Metadata for " + record['Name'] + "\" href='#divMetadataCtl' data-toggle='modal' data-target='#divMetadataCtl'><span title='View Metadata' class='metadataIcon sprite icon-info' data-value-code='" + record['Code'] + "'></span></a>";
                            }
                            else {

                                lihtml += "<span class='spacer' style='width:16px;height:16px; display:inline-block; float:left'></span>";

                            }
                            if (showPlusIcon) {
                                if (record['SM'] && dimtype == 'S') {
                                    lihtml += "<span class='spacer' style='width:16px;height:16px; display:inline-block; float:left'></span><span class='glyphicon glyphicon-plus-sign plusIcon' title='Add to Custom Group'> </span> ";
                                }
                                else {
                                    lihtml += "<span class='glyphicon glyphicon-plus-sign plusIcon' title='Add to Custom Group'> </span> ";
                                }
                            }
                            lihtml += "<input type='checkbox' id='chk" + record['ID'] + "' class='chkSelectElement' " + selectedchecked + "/>";
                        }
                        lihtml += "<span class='value bookunit' >" + record['Name'] + "</span>";
                        lihtml += "</li>";

                        html += lihtml;
                        alphabetSet = alphabetSet + record['JTC'] + ",";

                        if (dimtype == 'T') {
                            var opthtml = '<option value="' + record['ID'] + '">' + record['Name'] + '</option>';
                            html_ddlto += opthtml;
                            html_ddlfrom = opthtml + html_ddlfrom;
                        }
                    }
                    $(targetId).html(html);

                    /****************Code for Subnational Poverty Database *************/
                    if (gbl_SubnationalFilter && dimtype == 'C' && ($('#searchBox_' + controlid).val() == '' || gbl_remove_search)) {                     
                        $(".national").each(function () {                            
                            var code = $(this).attr("parent");
                            if ($(this).siblings("li[child='" + code + "']").length < 1) {
                                $(this).find(".closed").addClass("disabled");
                                $(this).find(".nationalName").show();
                                if (gbl_common_culture == "ar") {
                                    $(this).find(".nationalName").css("margin-right", "0");
                                }
                                else {
                                    $(this).find(".nationalName").css("margin-left", "0");
                                }
                                //$(this).find(".nationalName").css("font-weight", "bold");
                                $(this).find(".nationalName").prepend("<span class='closed disabled caret-n'></span>");
                                $(this).find(".nationalHeader").hide();
                            }
                        });
                    }
                    /****************Code for Subnational Poverty Database ends*************/

                    if (gbl_SubnationalFilter && dimtype == 'C' && ($('#searchBox_' + controlid).val() == '' || gbl_remove_search)) {
                        alphabetSet = subnationalAlphabetSet;
                    }
                    if (alphabetSet.length > 0) {
                        alphabetSet = alphabetSet.split(",");
                        alphabetSet = unique(alphabetSet);

                        $('#ulJumpToList_' + controlid).html("");
                        $.each(alphabetSet, function (index, value) {
                            $('#ulJumpToList_' + controlid).append('<li class="jumpTo"><a href="javascript:void(0)">' + value + '</a></li>');
                        });
                    }
                    else {
                        $('#ulJumpToList_' + controlid).html("");
                    }

                    if ($(targetId).parents(".panel").hasClass('modal-body'))
                        $(targetId).parents(".modal-content").find(".availableCount").text(length);
                    else
                        $(targetId).parents(".panel").find(".availableCount").text(length);

                    if (dimtype == 'T') {
                        $('#selCustomTime_From').html(html_ddlfrom);
                        $('#selCustomTime_To').html(html_ddlto);
                    }
                }
            }
            else if (length == 0) {
                $(targetId).html("<div class='noRecords'>No Records</div>");
                $(targetId).parents(".panel").find(".availableCount").text('0');
            }
            
            gbl_array_member_selected[controlid] = selectedMembers;
            GenarateAdobeDimensions(controlid);

            $('.metadataIcon').on('click', function () {               
                var code = $(this).attr('data-value-code');                
                var name = $(this).closest('li').find('span.value').text();
                var dimtype = $(this).closest('ul').attr('data-type');
                var dimname = $(this).closest('ul').attr('data-text');

                loadMetaDataVariable(name, code, dimtype, dimname);

                TrackFeature("Variables->" + dimname + "->Metadata->" + name);
            });

            $('.metadataIcon1').on('click', function () {
                var cubeid = $(this).attr('data-value-code');                
                var isPublic = $(this).attr('IsPublic');
                loadDatabaseDetails(cubeid, isPublic);

                TrackFeature("Variables->Database->Metadata->" + cubeid);
            });

            $(".bookunit").mouseover(function () {
                var dimtype = $(this).closest('ul').attr('data-type');
                if (dimtype == 'S' && gbl_HasIndicatorUnit) {
                    var uniqname = $(this).closest('li').attr('uniqueid');
                    var objBookAttribute = $.grep(gbl_array_book_attributes, function (e) { return e.seriesId == uniqname; });
                    if (objBookAttribute != null && objBookAttribute.length > 0) {
                        strBookUnitName = objBookAttribute[0].bookUnit;
                        $(this).attr('title', strBookUnitName);
                    }
                }
            });
        },
        loadError: function (jqXHR, status, error) {

        },
        beforeLoadComplete: function (records) {

        },
        afterLoadComplete: function (records) {
        }
    });
    //perform data binding.
    dataAdapter.dataBind();
}

function unique(array) {
    return $.grep(array, function (el, index) {
        return index == $.inArray(el, array);
    });
}

function stringBuilder_Time(controlid, targetId, showPlusIcon, memberlist) {
    var dimtype = $(targetId).attr('data-type');
    var loopStart = 0;
    var loopEnd = 0;
    if (gbl_high_freequencyenabled) {
        var dataSource = {
            dataType: "json",
            dataFields: [
                { name: 'ID', type: 'string' },
                { name: 'Code', type: 'string' },
                { name: 'Name', type: 'string' },
                { name: 'JTC', type: 'string' },
                { name: 'SM', type: 'boolean' },
                { name: 'HighFrequencyOrderBy', type: 'string' }
            ],
            localdata: memberlist
        };
    }
    else {
        var dataSource = {
            dataType: "json",
            dataFields: [
                { name: 'ID', type: 'string' },
                { name: 'Code', type: 'string' },
                { name: 'Name', type: 'string' },
                { name: 'JTC', type: 'string' },
                { name: 'SM', type: 'boolean' }
            ],
            localdata: memberlist
        };
    }
    
    if (gbl_high_freequencyenabled && dimtype == "T")
        var selectedMembers = gbl_array_member_selected[gbl_time_control_Id];
    else
        var selectedMembers = gbl_array_member_selected[controlid];

    if (selectedMembers == null) selectedMembers = {};

    var dataAdapter = new $.jqx.dataAdapter(dataSource, {
        loadComplete: function (records) { 
            var records = dataAdapter.records;
            var length = records.length;
            var html = "", html_ddlto = "", html_ddlfrom = "";            
            var ulhtml = "";
            var varPerCol = "";
            if (length > 0) {
                if (length < threshold) {
                    loopStart = 0;
                    loopEnd = length;
                    varPerCol = length / 4;                   
                    $("#selectedDimension_" + controlid + " .customPagination").hide();
                    timePaging = false;
                }
                else {
                    varPerCol = threshold / 4;
                    loopStart = gbl_start_var_time;
                    loopEnd = gbl_end_var_time;
                    $("#selectedDimension_" + controlid + " .customPagination").show();
                    timePaging = true;
                    $("#selectedDimension_" + controlid + " .totalCount").text(length);
                    if (gbl_start_var_time <= 1) {
                        $("#selectedDimension_" + controlid + " .showPrev_Time").attr("disabled", "disabled");
                        loopStart = 0;
                    }
                    else {
                        $("#selectedDimension_" + controlid + " .showPrev_Time").attr("disabled", false);
                    }
                    if (gbl_end_var_time < length) {
                        $("#selectedDimension_" + controlid + " .showNext_Time").attr("disabled", false);
                    }
                    else {
                        gbl_end_var_time = length;
                        $("#selectedDimension_" + controlid + " .showNext_Time").attr("disabled", "disabled");
                        loopEnd = length;
                        varPerCol = (loopEnd - loopStart) / 4;
                    }
                }

                $("#selectedDimension_" + controlid + " .start").text(loopStart + 1);
                $("#selectedDimension_" + controlid + " .end").text(loopEnd);
                liCounter = loopStart;
                var counter = 0;
                for (var q = counter; q < 4; q++) {
                    ulhtml = ulhtml + "<ul class='colUl'>";
                    for (var p = 0; p < varPerCol; p++) {
                        if (liCounter < loopEnd) {
                            var record = records[liCounter];
                            var alphabet = record['JTC'];
                            var isSelected = selectedMembers[record['ID']] != null;
                            var selectedclass = "";
                            var selectedchecked = "";

                            if (isSelected) {
                                selectedclass = "class='selected'";
                                selectedchecked = "checked='checked'";
                            }

                            var lihtml = "<li alphabet= '" + "' " + selectedclass + " uniqueId='" + record['ID'] + "'" + " orderby='" + record['HighFrequencyOrderBy'] + "'>"; 
                            lihtml += "<input type='checkbox' id='chk" + record['ID'] + "' class='chkSelectElement' " + selectedchecked + "/>";
                            lihtml += "<span class='value'>" + record['Name'] + "</span>";
                            lihtml += "</li>";
                            ulhtml += lihtml;

                            if (!gbl_high_freequencyenabled) {
                                var opthtml = '<option value="' + record['ID'] + '">' + record['Name'] + '</option>';
                                html_ddlto += opthtml;
                                html_ddlfrom = opthtml + html_ddlfrom;
                            }

                            liCounter++;
                        }
                    }
                    var startText = records[0]['Name'];
                    var endText = records[length - 1]['Name'];
                    $("#year").text(endText + " - " + startText);
                    ulhtml = ulhtml + "</ul>";
                    counter++;                    
                }

                $(targetId).html(ulhtml);   

                if (!gbl_high_freequencyenabled) {
                    $('#selCustomTime_From').html(html_ddlfrom);
                    $('#selCustomTime_To').html(html_ddlto);
                }

                if ($(targetId).parents(".panel").hasClass('modal-body'))
                    $(targetId).parents(".modal-content").find(".availableCount").text(length);
                else
                    $(targetId).parents(".panel").find(".availableCount").text(length);
            }
            else if (length == 0) {
                $(targetId).html("<div class='noRecords'>No Records</div>");
            }

            if (gbl_high_freequencyenabled) {//in case of HF,assigh the selected members to the single selected array
                gbl_array_member_selected[gbl_time_control_Id] = selectedMembers;
                GenarateAdobeDimensions(gbl_time_control_Id);
            }
            else {
                gbl_array_member_selected[controlid] = selectedMembers;
                GenarateAdobeDimensions(controlid);
            }
        },
        loadError: function (jqXHR, status, error) {

        },
        beforeLoadComplete: function (records) {

        },
        afterLoadComplete: function (records) {

        }
    });
    //perform data binding.
    dataAdapter.dataBind();
}

function getAutoSelect(controlid, targetId) {
    $('#panel_' + controlid + ' .btn.selectAll').trigger('click');
}

function getSelectedMembers(controlid, targetId) {   
    var dimtype = $(targetId).parent().find(".selectedView").attr('data-type');
    
    if (gbl_high_freequencyenabled && dimtype == "T")
        var selectedMembers = gbl_array_member_selected[gbl_time_control_Id];
    else
        var selectedMembers = gbl_array_member_selected[controlid];

    if (selectedMembers == null) return;
    var html = '';
   
    $.each(selectedMembers, function (key, val) {
        var orderby = val.orderby
        var customeditfun = "";
        var showplus = false;
        var titleplusicon = 'Add to Custom Group';
        switch (dimtype) {
            case "C":
                customeditfun = "editCustomGroup";
                break;
            case "S":
                showplus = true;
                titleplusicon = 'Add to Custom Indicator';
                customeditfun = "editCustomIndicator";
                break;
            case "T":
                customeditfun = "editCustomPeriod";
                break;
        }

        if ($(targetId).parent().find(".selectedView").find('li[uniqueid="' + key + '"]').length <= 0) {
            if (val.custom)
                html += addCustomMember(controlid, targetId, val, false, customeditfun, showplus, '');
            else
                html += "<li class='selected' orderby='"+ orderby + "' uniqueId='" + key + "'><span class='glyphicon glyphicon-plus-sign plusIcon' title='" + titleplusicon + "'> </span><span class='deleteIcon glyphicon glyphicon-remove-circle' title='Remove from selection'></span><span class='value'>" + val.displayname + "</span></li>";

        }
    });

    $(targetId).parent().find(".selectedView li").each(function (i, n) {
        var uniqueid = $(n).attr('uniqueid');
        if (selectedMembers[uniqueid] == null)
            $(targetId).parent().find('.selectedView li[uniqueid="' + uniqueid + '"]').remove();
    });

    getSelectedCount(controlid, targetId);
    $(targetId).parent().find(".selectedView").append(html);

    if (dimtype == "T") {

        if ($("#ascendingChkBox").prop("checked")) {
            myhelper = function (e) {
                return $('span', $(e)).text();
            }
            sortTimeAscending($(targetId).parent().find(".selectedView"));
        }
    }

}

function getSelectedCount(controlid, targetId) {      
    var selectedMembers;
    var selectedCount; 
    
    selectedMembers = gbl_array_member_selected[controlid];
    selectedCount = Object.keys(selectedMembers).length;   
    
    if (selectedCount > 0) {
        $(targetId).parents(".panel").find(".noVariableTxt").hide();
    }
    else{
        $(targetId).parents(".panel").find(".noVariableTxt").show();
    }    

    if ($(targetId).parents(".panel").hasClass('modal-body')) {
        $(targetId).parents(".modal-content").find(".selectionCount").text(selectedCount);
    }
    else
        $(targetId).parents(".panel").find(".selectionCount").text(selectedCount);

    var selectionCount;

    if (gbl_high_freequencyenabled && $('#tbl_' + controlid).attr('data-type') == "T")
        selectionCount = "#" + gbl_time_control_Id + "_selectCountRHS";
    else
        selectionCount = "#" + controlid + "_selectCountRHS";

    $(selectionCount).text(selectedCount);


}

function setSelectionChange(obj) {
    var ischecked = $(obj).prop("checked");
    var dataType = $(obj).parents(".panel").find('ul.selectedView').attr('data-type');
    if (gbl_SubnationalFilter && dataType == "C") {
        setSelectionChangeEx(obj, ischecked, ".SubnationalAvailableView");
    }
    else {
        setSelectionChangeEx(obj, ischecked, ".availableView");
    }
}

function setSelectionChangeEx(obj, ischecked, viewctl) {
    //debugger;
    var controlid;
    var targetId;
    var selectedMembers;
    controlid = $(obj).parents(".panel").find(viewctl).attr('data-value');
    gblselectionChanged[controlid] = true;
    targetId = "#tbl_" + controlid;          
    selectedMembers = gbl_array_member_selected[controlid];

    var dimtype = $(obj).parents(".panel").find(viewctl).attr('data-type');    
    if (selectedMembers == null) selectedMembers = {};

    var uniqueid = $(obj).parent('li').attr('uniqueid');
    var orderby = $(obj).parent('li').attr('orderby');
    var memname = $(obj).parent('li').find('.value').text();
    if (gbl_SubnationalFilter && dimtype == 'C') {
        if (uniqueid == null) {
            uniqueid = $(obj).parent('div').parent('li').attr('uniqueid');
            if ($(obj).parent('div').parent('li').find('.value') && $(obj).parent('div').parent('li').find('.value').length > 0)
                memname = $(obj).parent('div').parent('li').children('.value').text();
        }
        else {
            if ($(obj).parent('li').find('.value') && $(obj).parent('li').find('.value').length > 0)
                memname = $(obj).parent('li').children('.value').text();
        }
    }

    if (dimtype == "S" && !$('#aggRuleTxt div.panel-heading a').hasClass('collapsed')) {
        $('#aggRuleTxt div.panel-heading #aDefineAggrRule').trigger('click');
    }

    if (ischecked && selectedMembers[uniqueid] == null) selectedMembers[uniqueid] = { displayname: memname, custom: false, orderby: orderby };
    else if (!ischecked && selectedMembers[uniqueid] != null) {
        var objcustom = selectedMembers[uniqueid];
        if (objcustom.customdefinition != null && objcustom.customdefinition.periods != null && objcustom.customdefinition.periods.length > 0) {
            $tblavailable = $("#tbl_" + controlid);
            $.each(objcustom.customdefinition.periods, function (index, obj) {
                $tblavailable.find("input[id='chk" + obj.uniquename + "']").prop({ checked: false }).removeAttr("disabled");
            });
        }
        delete selectedMembers[uniqueid];
    }
 
    gbl_array_member_selected[controlid] = selectedMembers;

    if (controlid)
        GenarateAdobeDimensions(controlid);    

    getSelectedMembers(controlid, targetId);

    if ($("#divNoDataToDisplay").is(":hidden")) {


        $("#faded").show();
        var position = $("#panel_" + controlid).position();

        $(".selectionModifyTxt").show();
        if ($(".downloadMsg").is(":visible"))
            $(".downloadMsg").hide();
        $(".selectionModifyTxt").attr("panel-id", "#panel_" + controlid);
        //        $(".selectionModifyTxt").css({ "top": ((position.top > 20 ? position.top : 90) - 20) + "px" });
    }

    else {

        var isDimensionSelected = 0;
        $(".selectionCountRHS").each(function () {

            var val = eval($(this).text());

            if (val == null || val < 1 || val == '') {


                isDimensionSelected++;

            }


        });

        if (isDimensionSelected > 0) {
            $("#applyChangesNoPreview").addClass("disabled");

        }
        else {
            $("#applyChangesNoPreview").removeClass("disabled");
            $(".allDimSelected.noPreview").show();
            $(".dimSelected.noPreview").hide();
        }

    }
    if (dimtype == 'S' && $('#hdnReportType').val() == 'CHART' && gbl_HasIndicatorUnit) {
        var isPageSeries = false;
        var controlid = $('.variableTable.selectedView[data-type="S"]').attr('data-value')
        if ($('.page-ddl').attr('id') != null) {
            if ($('.page-ddl').attr('id').indexOf(controlid) >= 0)
                isPageSeries = true;
        }
        if (!validateBookUnits() && !isPageSeries) {

            document.getElementById('selModifyText').innerHTML = gbl_common_labels.Reports_Label_Selection_UnitModified;
        }
    }

}

function removecustomvariables(obj) {
    var controlid = $(obj).parents(".panel").find(".availableView").attr('data-value');    
    var selectedMembers = gbl_array_member_selected[controlid];
    if (selectedMembers == null) selectedMembers = {};
    $(obj).parents(".panel").find(".selectedView li").each(function (i, n) {
        var uniqueid = $(n).attr('uniqueid');
        if (uniqueid.indexOf('custom_') >= 0) delete selectedMembers[uniqueid];
    });
    gbl_array_member_selected[controlid] = selectedMembers;
    GenarateAdobeDimensions(controlid);
}


function setSelections(obj) {
    var dimensioncollection;
    var dataType = $(obj).parents(".panel").find('ul.selectedView').attr('data-type'); 
    var activetab = $(".variableList").find(".tabcontent:visible").attr('id');
    if (gbl_SubnationalFilter && dataType == "C") {        
        if (activetab == null) //Active tab will be null only in case of remove selections
            dimensioncollection = $(obj).parents(".panel").find(".SubnationalAvailableView li");
        else
            dimensioncollection = $(obj).parents(".panel").find(".SubnationalAvailableView #" + activetab + " li");
    } else {
        dimensioncollection = $(obj).parents(".panel").find(".availableView li");
    }

    var controlid = $(obj).parents(".panel").find(".availableView").attr('data-value');
    var targetId = "#tbl_" + controlid;   

    var selectedMembers = gbl_array_member_selected[controlid];
    if (selectedMembers == null) selectedMembers = {};

    dimensioncollection.each(function (i, n) {
        var uniqueid = $(n).attr('uniqueid');
        var memname = $(n).children('.value').text();
        var ischecked = $(n).find('.chkSelectElement').prop('checked');
        var orderby = $(obj).parent('li').attr('orderby');
        if (ischecked && selectedMembers[uniqueid] == null)
            selectedMembers[uniqueid] = { displayname: memname, custom: false, orderby: orderby };
        if (!ischecked && selectedMembers[uniqueid] != null) 
            delete selectedMembers[uniqueid];
    });
    if (gbl_SubnationalFilter && dataType == "C" && activetab == null) {
        selectedMembers = {}; 
    }

    gbl_array_member_selected[controlid] = selectedMembers;
    GenarateAdobeDimensions(controlid);
    getSelectedMembers(controlid, targetId);
    if ($("#divNoDataToDisplay").is(":hidden")) {
        $("#faded").show();
        var position = $("#panel_" + controlid).position();
        $(".selectionModifyTxt").show();
        if ($(".downloadMsg").is(":visible"))
            $(".downloadMsg").hide();
        $(".selectionModifyTxt").attr("panel-id", "#panel_" + controlid);        
    }
    else {
        var isDimensionSelected = 0;
        $(".selectionCountRHS").each(function () {
            var val = eval($(this).text());
            if (val == null || val < 1 || val == '') {
                isDimensionSelected++;
            }
        });

        if (isDimensionSelected > 0) {
            $("#applyChangesNoPreview").addClass("disabled");
        }
        else {
            $("#applyChangesNoPreview").removeClass("disabled");
            $(".allDimSelected.noPreview").show();
            $(".dimSelected.noPreview").hide();
        }
    }

    if ($(".downloadMsg").is(":visible")) {
        $(".downloadMsg").hide();
    }
}

function setSelectionsBadge(obj) {
    var dimensioncollection;
    var dataType = $(obj).parents(".panel").find('ul.selectedView').attr('data-type'); 
    dimensioncollection = $($(obj).parents('ul li')[0]).children().find("li")
    

    var controlid = $(obj).parents(".panel").find(".availableView").attr('data-value');
    var targetId = "#tbl_" + controlid;

    var selectedMembers = gbl_array_member_selected[controlid];
    if (selectedMembers == null) selectedMembers = {};

    dimensioncollection.each(function (i, n) {
        var uniqueid = $(n).attr('uniqueid');
        var memname = $(n).children('.value').text();
        var ischecked = $(n).find('.chkSelectElement').prop('checked');
        var orderby = $(obj).parent('li').attr('orderby');
        if (ischecked && selectedMembers[uniqueid] == null)
            selectedMembers[uniqueid] = { displayname: memname, custom: false, orderby: orderby };
        if (!ischecked && selectedMembers[uniqueid] != null)
            delete selectedMembers[uniqueid];
    });
    gbl_array_member_selected[controlid] = selectedMembers;
    GenarateAdobeDimensions(controlid);
    getSelectedMembers(controlid, targetId);
    if ($("#divNoDataToDisplay").is(":hidden")) {
        $("#faded").show();
        var position = $("#panel_" + controlid).position();
        $(".selectionModifyTxt").show();
        if ($(".downloadMsg").is(":visible"))
            $(".downloadMsg").hide();
        $(".selectionModifyTxt").attr("panel-id", "#panel_" + controlid);
    }
    else {
        var isDimensionSelected = 0;
        $(".selectionCountRHS").each(function () {
            var val = eval($(this).text());
            if (val == null || val < 1 || val == '') {
                isDimensionSelected++;
            }
        });

        if (isDimensionSelected > 0) {
            $("#applyChangesNoPreview").addClass("disabled");
        }
        else {
            $("#applyChangesNoPreview").removeClass("disabled");
            $(".allDimSelected.noPreview").show();
            $(".dimSelected.noPreview").hide();
        }
    }

    if ($(".downloadMsg").is(":visible")) {
        $(".downloadMsg").hide();
    }
}

/**************************************************************************************************************************************************/
/********************************************Filter related functions******************************************************************************/
/**************************************************************************************************************************************************/
function initFilter(controlid, hierarchy, targetId, showPlusIcon, dimdata) {    
    //for classification
    if (dimdata.CL) {
        initClassificationFilter(controlid, hierarchy, targetId, showPlusIcon, dimdata);

        if ($("#tbl_" + controlid).attr("data-type") == "C") {           
            $("#showCountryAggOption_" + controlid).hide(); //NONCLASSIFICATION
            if (!gbl_SubnationalFilter) $("#CtryAgg_Classification_" + controlid).show(); //Classification
        }
    }
    else {
        if ($("#tbl_" + controlid).attr("data-type") == "C") {
            $("#showCountryAggOption_" + controlid).show(); //NONCLASSIFICATION
            $("#CtryAgg_Classification_" + controlid).hide(); //Classification
        }
        if ($('.dimension-hierarchy-' + controlid + ' option').length <= 0) {
            if (dimdata.Hier != null && Object.keys(dimdata.Hier).length > 0) {
                $.each(dimdata.Hier, function (key, val) {
                    $('.dimension-hierarchy-' + controlid).append('<option value="' + key + '">' + val + '</option>');
                });
                $('.dimension-hierarchy-' + controlid).val(dimdata.DH);
            }
            else
                $('.dimension-hierarchy-' + controlid).append('<option value="' + dimdata.DH + '">' + dimdata.DH + '</option>'); //default hierarchy
        }

        if ($('.dimension-hierarchy-' + controlid + ' option').length <= 1) $("#hierarchy_" + controlid).hide();
        $('.dimension-hierarchy-' + controlid).off('change');
        $('.dimension-hierarchy-' + controlid).on('change', function () {            
            loadDimensionList(controlid, $(this).val(), null);
            $(".showCountryAggOption").removeClass("active");
            $(".showCountryAggOption[data-value='All']").addClass("active");
        });
    }
}

function loadFilter(controlid, hierarchy, targetId, showPlusIcon, levels) {
    var hierarchylist = '';
    var isdblist = controlid == "DBList";
    if (levels == null) return;
    
    $.each(levels, function (index, value) {
        hierarchylist += getFilterList(index, value, isdblist, controlid);
    });

    if ($("#tbl_" + controlid).attr("data-type") == "C") {
        if (hierarchylist.indexOf("filter-check-aggregates") < 1) {
            $("#showCountryAggOption_" + controlid).hide(); //NONCLASSIFICATION
            $("#CtryAgg_Classification_" + controlid).hide(); //Classification
        }
    }

    if (gbl_high_freequencyenabled && $('#tbl_' + controlid).attr('data-type') == "T") {
        $('#lstFilterItems_' + gbl_time_control_Id).html(hierarchylist);
    }
    else {
        $('#lstFilterItems_' + controlid).html(hierarchylist);
    }

    setTimeout(function () {
        if ($('#lstFilterItems_' + controlid).find("li.show").length == 0) {
            $('#lstFilterItems_' + controlid).prepend("<em>This hierarchy has no sub-levels.</em>");

        }
    }, 100);
    
    $('.filter-check').on('click', function () {
        $('#report-loading').show();
        var anySelected = false;
        var allselected;
        var filtermembers;
        var availableCount;
        var dimdata;   
        var dataName;        
        var dimtype = $(targetId).attr('data-type');
        if (gbl_high_freequencyenabled && dimtype === "T") {
            controlid = gbl_time_control_Id;
        }

        dimdata = Object.assign({}, gbl_array_data[controlid + '_' + hierarchy]);

        if (dimdata.HasDimensionFiltering && dimdata.Parentdimension != null)
            dimdata.Members = FilterParentCodes(controlid, hierarchy);// filter based on parent dimension

        if (gbl_high_freequencyenabled && dimtype == "T") {
            allselected = $('#lstFilterItems_' + gbl_time_control_Id + ' .filter-check:checked').map(function (i, opt) {
                return { datavalue: $(opt).attr('data-value'), datalevel: $(opt).attr('data-level') };
            }).toArray();
            filtermembers = GetHighFrequencyDataSource();
        }
        else {
            if (gbl_SubnationalFilter && dimtype == 'C') {
                allselected = $('#lstFilterItems_' + controlid + ' .filter-check:checked').map(function (i, opt) {
                    if ($(opt).attr('data-level') !== "1") {
                        dataName = $(opt).parent('li')[0].innerText;
                    }
                    return { datavalue: $(opt).attr('data-value'), datalevel: $(opt).attr('data-level'), dataname: dataName  };
                }).toArray();
            } else {
                allselected = $('#lstFilterItems_' + controlid + ' .filter-check:checked').map(function (i, opt) {
                    return { datavalue: $(opt).attr('data-value'), datalevel: $(opt).attr('data-level') };
                }).toArray();
            }
            filtermembers = dimdata.Members;
        }      

        var jumptolist = dimdata.JTL;        

        if (allselected.length > 0) {
            if (gbl_subnational_pagination && gbl_SubnationalFilter && dimtype === 'C') {
                anySelected = true;
                var parentcodes = '';
                var dataLevel = null;
                var dataValue;
                for (var i = 0; i < allselected.length; i++) {
                    if (allselected[i].dataname && allselected[i].dataname.trim() !== '') 
                        parentcodes = parentcodes + allselected[i].dataname + "~";
                    //dataValue = allselected[i].datavalue ? allselected[i].datavalue.split('.')[0] : 0;
                    //dataValue = dataValue - 1;
                    //if (dataValue > dataLevel)
                    //    dataLevel = dataValue;                    
                }
                if (parentcodes.length > 0)
                    parentcodes = parentcodes.substring(0, parentcodes.length - 1);
                else
                    dataLevel = 0;

                var filtermembers2 = [];
                var filterOutput = LoadSubNationalChildren(controlid, hierarchy, dataLevel, "", "", parentcodes);
                filtermembers2 = fillHierarchy(filterOutput);
                if (filterOutput.length > 0) 
                    filtermembers = OrderSubnationalData(filterOutput.concat(filtermembers2)); 
            }
            else {
                if (gbl_SubnationalFilter && dimtype == 'C') {
                    filtermembers = $.grep(filtermembers, function (n, i) {
                        return getSubnationalFilterSelected(allselected, n);
                    });
                    if (filtermembers.length > 0)
                        FindSubnationalParents(filtermembers, dimdata.Members);
                }
                else {
                    filtermembers = $.grep(filtermembers, function (n, i) {
                        return getFilterSelected(allselected, n, isdblist, controlid);
                    });
                }
            }
            jumptolist = $(filtermembers).map(function (i, opt) { return opt.JTC; });
            jumptolist = $.unique(jumptolist);
        }

        if (gbl_high_freequencyenabled && dimtype == 'T') {
            controlid = GetHighFrequencyControlId(gbl_time_control_Id);
            targetId = GetHighFrequencyTargetId(gbl_time_target_Id);
        } 
        
        loadDimMembers(controlid, targetId, showPlusIcon, filtermembers, jumptolist, anySelected);
                
        $('#report-loading').hide();
        if ($(".nonclassification").is(":visible")) {
            $(".showCountryAggOption").removeClass("active");
            $(".showCountryAggOption[data-value='Countries']").addClass("active");
        }

        $(this).parents(".panel").find(".searchInput").val("");
        if (allselected.length > 0)
            $(this).parents(".panel").find(".filterResults").show();
        else
            $(this).parents(".panel").find(".filterResults").hide();

        wbgData.siteSearch.searchTerm = $(this).parent().prop('innerText');
        wbgData.siteSearch.searchFilters = "dimensionmembers";
        AnalyticsControlClick('editreports', '');

        TrackFeature("Variables->" + getPanelHeading(this) + "->FilterBy->" + $(this).parent().prop('innerText'));
    });
}

function getSubnationalFilterSelected(allselected, member) {
    for (var index = 0; index < allselected.length; index++) { 
        if ((member.HLS != null && member.HLS[allselected[index].datalevel - 1] == allselected[index].datavalue) ||
            (allselected[index].datavalue.split("&").pop().replace('[', '').replace(']', '') == member.Name) ||
            (allselected[index].dataname === member.Name) /*|| (member.HLS.length == 1 && allselected[index].datalevel == 1)*/)
            return true;      
    }
}


function filterCountryAggregates() {
    $("body").on("click", ".showCountryAggOption", function () {
        var controlId = $(this).attr("controlId")
        var dataValue = $(this).attr("data-value");
        var hierarchy = $("#ddlDimHierarchy_" + controlId).val();
        var genChkSelector = $("#lstFilterItems_" + controlId);
        if (dataValue == "All") {
            $("#toggleFilter_" + controlId).attr("disabled", false);
            $("#_filterTree_" + controlId).removeClass("disabled");
            genChkSelector.find(".filter-check").prop("checked", false);
            genChkSelector.find(".filter-check").trigger("click");
            setTimeout(function () {
                genChkSelector.find(".filter-check").prop("checked", false);
            }, 100);
        }
        else if (dataValue == "Countries") {
            $("#toggleFilter_" + controlId).attr("disabled", false);
            $("#_filterTree_" + controlId).removeClass("disabled");
            genChkSelector.find(".filter-check").prop("checked", false);
            genChkSelector.find(".filter-check").trigger("click");
            $(".filter-check-aggregates .filter-check").trigger("click");
            setTimeout(function () {
                genChkSelector.find(".filter-check").prop("checked", false);
            }, 100);
        }
        else {
            $("#_filterTree_" + controlId).addClass("disabled");
            $("#toggleFilter_" + controlId).attr("disabled", true);
            genChkSelector.find(".filter-check").prop("checked", true);
            genChkSelector.find(".filter-check").trigger("click");
            $(".filter-check-aggregates .filter-check").trigger("click");
            setTimeout(function () {
                genChkSelector.find(".filter-check").prop("checked", false);
            }, 100);
        }
        $("#filterResults_" + controlId).hide();
    });
}

function getFilterSelected(allselected, member, isdblist, controlid) {
    for (var index = 0; index < allselected.length; index++) {
        if (isdblist || (gbl_high_freequencyenabled) && $('#tbl_' + controlid).attr('data-type') == "T") {
            if (member.HLS != null && member.HLS.indexOf(allselected[index].datavalue) >= 0) return true;
        }
        else {
            if (member.HLS != null && member.HLS[allselected[index].datalevel - 1] == allselected[index].datavalue) return true;
        }
    }
}


function getFilterList(index, value, isdblist, controlid) {
    var hierarchylist = '';

    if ((value.HID).indexOf("[Aggregates]") > 0) {
        hierarchylist += '<li class="dispNone filter-check-aggregates">';
    }
    else if ((value.HID).indexOf("[Countries]") > 0) {
        hierarchylist += '<li class="dispNone filter-check-countries">';
    }
    else {
        if (gbl_high_freequencyenabled && $('#tbl_' + controlid).attr('data-type') == "T")
            hierarchylist += '<li class="showTab">';
        else
            hierarchylist += '<li class="show">';
    }

    switch (value.LN) {
        case 1:
            hierarchylist += '<div class="parentNode">';
            if (value.LV.length > 0) {
                hierarchylist += "<span class='toggleList'></span>";
            }

            if (!isdblist && !(gbl_high_freequencyenabled && $('#tbl_' + controlid).attr('data-type') == "T")) {
                hierarchylist += '<input type="checkbox" class="masterSelector filter-check" data-value="' + value.HID + '" data-level="' + value.LN + '" />';
            }
            hierarchylist += "<span class='toggleListText'>" + value.HN + '<span></div>';
            break;
        default:
            if (value.HN !== "NULL" && value.HN !== null)
                hierarchylist += '<input type="checkbox" class="selector filter-check" data-value="' + value.HID + '" data-level="' + value.LN + '" />' + value.HN;
            break;
    }

    if (value.LV.length > 0) {
        hierarchylist += '<ul class="childNodes level' + value.LN + '">';
        $.each(value.LV, function (index1, value1) {
            hierarchylist += getFilterList(index1, value1, isdblist, controlid);
        });
        hierarchylist += '</ul>';
    }

    hierarchylist += '</li>';

    return hierarchylist;
}

function loadSelectFilterItems(obj) {
    //debugger;

    var allselected = $('#divMapRegion .select-filter-check:checked, #divMapIncome .select-filter-check:checked').map(function (i, opt) {
        return { datavalue: $(opt).attr('value'), filtertype: $(opt).attr('filter-type') };
    }).toArray();

    var controlid = $('#divMapRegion').attr('data-type');
    var dimdatakeys = $.grep(Object.keys(gbl_array_data), function (n, i) {
        if (n.indexOf(controlid + '_') == 0) return true;
    });
    var dimdata = (dimdatakeys.length > 0 ? gbl_array_data[dimdatakeys[0]] : null);

    if (allselected.length > 0 && dimdata != null) {
        var filtermembers = dimdata.Members;

        filtermembers = $.grep(filtermembers, function (n, i) {
            return getSelectFilterSelected(allselected, n);
        });

        $(obj).parents(".panel").find(".selectedView li").remove();
        $(obj).parents(".panel").find(".availableView li .chkSelectElement").prop("checked", false);
        $(obj).parents(".panel").find(".availableView li").removeClass("selected");

        var controlid = $(obj).parents(".panel").find(".selectedView").attr('data-value');
        var targetId = "#tbl_" + controlid;

        var selectedMembers = {};
        var html = '';
        $.each(filtermembers, function (ind, val) {
            selectedMembers[val.ID] = { displayname: val.Name, custom: false };
            html += "<li class='selected' uniqueId='" + val.ID + "'><span class='glyphicon glyphicon-plus-sign plusIcon' title=''> </span><span class='deleteIcon glyphicon glyphicon-remove-circle' title='Remove from selection'></span><span class='value'>" + val.Name + "</span></li>";

            $(obj).parents(".panel").find(".availableView li[uniqueid='" + val.ID + "']").addClass("selected").find('.chkSelectElement').prop('checked', true);
        });
        $(obj).parents(".panel").find(".selectedView").append(html);
        gbl_array_member_selected[controlid] = selectedMembers;
        GenarateAdobeDimensions(controlid);
        getSelectedMembers(controlid, targetId);
    }
}

function getSelectFilterSelected(allselected, member) {
    for (var index = 0; index < allselected.length; index++) {
        var filterindex = (allselected[index].filtertype == 'Region' ? 0 : (allselected[index].filtertype == 'Income' ? 1 : -1));

        if (filterindex >= 0 && member.HLS != null && member.HLS[filterindex] == allselected[index].datavalue) return true;
    }
}

/**************************************************************************************************************************************************/
/********************************************Classification related functions**********************************************************************/
/**************************************************************************************************************************************************/
function initClassificationFilter(controlid, hierarchy, targetId, showPlusIcon, dimdata) {    
    if ($('.dimension-hierarchy-' + controlid + ' option').length <= 0) {
        $.each(dimdata.Levels, function (index, value) {
            $('.dimension-hierarchy-' + controlid).append('<option value="' + value.HID + '">' + value.HN + '</option>');
        });
    }
    $("#hierarchy_" + controlid).hide();    
    $(".CtryAgg_Classification").click(function () {
        var dataValue = $(this).attr("data-value");
        var genChkSelector = $("#lstFilterItems_" + controlid);
        if (dataValue == "All") { 
            if (dimdata.DT == "C" && gbl_SubnationalFilter) {
                var AggregatesToggleid = "div#CtryAgg_Classification_" + controlid + " label.CtryAgg_Classification[data-value='Aggregates']";
                if ($(AggregatesToggleid)) $(AggregatesToggleid).removeClass('active');                
            }
            var allMemberList;
            if (dimdata.Aggr != null)
                allMemberList = $.merge($.merge([], dimdata.Members), dimdata.Aggr);
            else
                allMemberList = dimdata.Members;

            var allJTL;
            if (dimdata.JTLA != null)
                allJTL = $.merge($.merge([], dimdata.JTL), dimdata.JTLA);
            else
                allJTL = dimdata.JTL;

            loadDimMembers(controlid, targetId, showPlusIcon, allMemberList, allJTL, false);           
            getSelectedMembers(controlid, targetId);

            if (dimdata.Levels != null && dimdata.CHL.length > 0)
                loadClassificationFilter(controlid, hierarchy, targetId, showPlusIcon, dimdata.CHL);

            $("#toggleFilter_" + controlid).attr("disabled", false);
            if (!(dimdata.DT == "C" && gbl_SubnationalFilter))
                sortAllSelectedItems($("#tbl_" + controlid), true);
            $("#_filterTree_" + controlid).removeClass("disabled");
            TrackFeature('Variables->Country->Classification->All');
        }
        else if (dataValue == "Countries") {
            if (dimdata.DT == "C" && gbl_SubnationalFilter) {
                var AggregatesToggleid = "div#CtryAgg_Classification_" + controlid + " label.CtryAgg_Classification[data-value='Aggregates']";                 
                if ($(AggregatesToggleid)) $(AggregatesToggleid).removeClass('active');           
                loadDimMembers(controlid, targetId, showPlusIcon, dimdata.Members, null, false); 
            }
            else {
                loadDimMembers(controlid, targetId, showPlusIcon, dimdata.Members, dimdata.JTL, false);
                getSelectedMembers(controlid, targetId);

                if (dimdata.Levels != null && dimdata.CHL.length > 0)
                    loadClassificationFilter(controlid, hierarchy, targetId, showPlusIcon, dimdata.CHL);

                $("#toggleFilter_" + controlid).attr("disabled", false);
                $("#_filterTree_" + controlid).removeClass("disabled");
            }
            TrackFeature('Variables->Country->Classification->Countries');
        }
        else {
            if (dimdata.DT == "C" && gbl_SubnationalFilter) {
                loadDimMembers(controlid, targetId, showPlusIcon, dimdata.Members, null, false);
                var countrytoggleid = "div#CtryAgg_Classification_" + controlid + " label.CtryAgg_Classification[data-value='Countries']";
                var alltoggleid = "div#CtryAgg_Classification_" + controlid + " label.CtryAgg_Classification[data-value='All']";
                if ($(countrytoggleid)) $(countrytoggleid).removeClass('active');
                if ($(alltoggleid)) $(alltoggleid).removeClass('active');
                sortAllSelectedItems($("#tbl_" + controlid), true);                
            } else {
                loadDimMembers(controlid, targetId, showPlusIcon, dimdata.Aggr, dimdata.JTLA, false);
                getSelectedMembers(controlid, targetId);

                if (dimdata.Levels != null && dimdata.CHL.length > 0)
                    loadClassificationFilter(controlid, hierarchy, targetId, showPlusIcon, dimdata.CHL);

                $("#toggleFilter_" + controlid).attr("disabled", true);
                $("#_filterTree_" + controlid).addClass("disabled");
            }
            TrackFeature('Variables->Country->Classification->Aggregates');
        }
        $("#filterResults_" + controlid).hide();
        $("#hierarchy_" + controlid).hide();
    });
}

function loadClassificationFilter(controlid, hierarchy, targetId, showPlusIcon, levels) {
    var hierarchylist = '';
    $.each(levels, function (index, value) {
        hierarchylist += getClassificationFilterList(index, value);
    });

    $('#lstFilterItems_' + controlid).html(hierarchylist);   
    $('.filter-check').on('click', function () {
        var anySelected = false;
        $('#report-loading').show();
        var allselected = $('#lstFilterItems_' + controlid + ' .filter-check:checked').map(function (i, opt) {
            return { datavalue: $(opt).attr('data-value'), datalevel: $(opt).attr('data-level'), parentindex: $(opt).parent().parent().closest('li').attr('data-index') };
        }).toArray();

        var dimdata;
        if (gbl_high_freequencyenabled && $('#tbl_' + controlid).attr('data-type') == "T")
            dimdata = gbl_array_data[gbl_time_control_Id + '_' + hierarchy];
        else
            dimdata = gbl_array_data[controlid + '_' + hierarchy];

        var filtermembers = dimdata.Members;
        var jumptolist = dimdata.JTL;
        if (allselected.length > 0) {
            anySelected = true;
            var filtermembersall = dimdata.Members;
            filtermembers = $.grep(filtermembersall, function (n, i) {
                return getClassificationSelected(allselected, n);
            });
            jumptolist = $(filtermembers).map(function (i, opt) { return opt.JTC; });
            jumptolist = $.unique(jumptolist);
        }

        if (gbl_SubnationalFilter && $('#tbl_' + controlid).attr('data-type') == "C") {
            if (filtermembers.length > 0)
                FindSubnationalParents(filtermembers, dimdata.Members);
            loadDimMembers(controlid, targetId, showPlusIcon, filtermembers, jumptolist, anySelected);
        }
        else
            loadDimMembers(controlid, targetId, showPlusIcon, filtermembers, jumptolist, false);

        $('#report-loading').hide();
        $(this).parents(".panel").find(".searchInput").val("");
        $(this).parents(".panel").find(".searchResults").hide();
        if (allselected.length > 0)
            $(this).parents(".panel").find(".filterResults").show();
        else
            $(this).parents(".panel").find(".filterResults").hide();

        if ($(".classification").is(":visible")) {
            $(".CtryAgg_Classification").removeClass("active");
            $(".CtryAgg_Classification[data-value='Countries']").addClass("active");
        }

        wbgData.siteSearch.searchTerm = $(this).parent().prop('innerText');
        wbgData.siteSearch.searchFilters = "dimensionmembers";
        AnalyticsControlClick('editreports', '');
        TrackFeature("Variables->" + getPanelHeading(this) + "->FilterBy->" + $(this).parent().prop('innerText'));
    });
}

function getClassificationSelected(allselected, member) {
    var membersel = true;
    var income = [];
    var lending = [];
    var region = [];
    var hasincome = false;
    var hasregion = false;
    var haslending = false;

    for (var index = 0; index < allselected.length; index++) {
        if (allselected[index].parentindex == 0) {
            region.push(allselected[index].datavalue);
            hasregion = true;
        }
        else if (allselected[index].parentindex == 1) {
            income.push(allselected[index].datavalue);
            hasincome = true;
        }
        else if (allselected[index].parentindex == 2) {
            lending.push(allselected[index].datavalue);
            haslending = true;
        }
    }

    if (membersel && hasregion) {
        if ($.grep(member.HLS, function (el) { return $.inArray(el, region) != -1 }).length > 0) {
            membersel = true;
        }
        else {
            membersel = false;
        }
    }

    if (membersel && hasincome) {
        if ($.grep(member.HLS, function (el) { return $.inArray(el, income) != -1 }).length > 0) {
            membersel = true;
        }
        else {
            membersel = false;
        }
    }

    if (membersel && haslending) {
        if ($.grep(member.HLS, function (el) { return $.inArray(el, lending) != -1 }).length > 0) {
            membersel = true;
        }
        else {
            membersel = false;
        }
    }
    return membersel;
}

function getClassificationFilterList(index, value) {
    var hierarchylist = '';

    hierarchylist += '<li data-index="' + index + '">';
    switch (value.LN) {
        case 1:
            if (value.HN != null && value.HN != "") {
                hierarchylist += '<div class="parentNode">';
                hierarchylist += "<span class='toggleList mT4'></span>";
                hierarchylist += "<span class='toggleListText'>" + value.HN + '<span></div>';
            }
            break;
        default:
            if (value.HN != null && value.HN != "")
                hierarchylist += '<input type="checkbox" class="selector filter-check" data-value="' + value.HID + '" data-level="' + value.LN + '" /> ' + value.HN;
            break;
    }

    if (value.LV.length > 0) {
        hierarchylist += '<ul class="childNodes level' + value.LN + '">';
        $.each(value.LV, function (index1, value1) {
            hierarchylist += getClassificationFilterList(index1, value1);
        });
        hierarchylist += '</ul>';
    }

    hierarchylist += '</li>';

    return hierarchylist;
}

/**************************************************************************************************************************************************/
/**********************************************Search related functions****************************************************************************/
/**************************************************************************************************************************************************/
function initSearch() {
    $(".searchBtn").click(function () {
        var controlid = $(this).attr("data-source");
        var dataSource = gbl_array_member_list[controlid];
        var targetId = $(this).attr("target-id");
        var inputId = $(this).attr("data-input");
        var showMetadata = eval($(this).attr("metadata"));
        var customOptions = eval($(this).attr("custom-option"));
       
        if (gbl_high_freequencyenabled == true && $('#tbl_' + controlid).attr('data-type') == "T") {
                controlid = GetHighFrequencyControlId(controlid);
                targetId = GetHighFrequencyTargetId(targetId);
                dataSource = GetHighFrequencyDataSource();                
        }

        

        invokeSearch(controlid, inputId, dataSource, targetId, true);
        
        
        //Adobe Analytics code
        if (wbgData.siteSearch !== null && $(this).siblings(".searchInput").val() !== null && $(this).siblings(".searchInput").val() !== "") {

            var dimtype = $(this).parents(".panel").find(".availableView").attr("data-type");
            var dbname = $(".database h2").text().trim();
            var dimtypename = "";
            switch (dimtype) {
                case 'T':
                    dimtypename = "Year";
                    break;
                case 'S':
                    dimtypename = "Series";
                    break;
                case 'C':
                    dimtypename = "Country";
                    break;
                case 'D':
                    dimtypename = "Database";
                    break;
                case 'O':
                    dimtypename = $(this).parents(".panel").find(".main-title-panel").text().trim();
                    break;
                default:
                    dimtypename = "GeneralQuery";
            }

            TrackFeature("Variables->" + dimtypename + "->Search");

            wbgData.siteSearch.searchTerm = $(this).siblings(".searchInput").val();
            wbgData.siteSearch.searchFilters = "dimension:" + dimtypename;
            AnalyticsControlClick('editreports', '');
        } //Adobe Analytics code ends here
    });

    $(".removeSearch").click(function () {
        gbl_start_var = 1;
        gbl_end_var = threshold;

        var controlid = $(this).attr("data-source");
        var targetId = $(this).attr("target-id");
        var controlid_temp;
        var targetId_temp;
        var dataSource = gbl_array_member_list[controlid];
        var type = $(this).attr("destination_type");
        var showMetadata = eval($(this).attr("metadata"));
        var customOptions = eval($(this).attr("custom-option"));
       
        if (gbl_high_freequencyenabled == true && $('#tbl_' + controlid).attr('data-type') == "T") { 
            $('div#HighFequencyFilter input.filter-check').prop("checked", false);
            controlid_temp = controlid + "_Quater";
            targetId_temp = targetId + "_Quater";
            dataSource = gbl_high_frequency_array_data["Q"];
            if (dataSource != null && dataSource.length > 0)
                RemoveFilter(controlid_temp, targetId_temp, dataSource, type, "Q");

            controlid_temp = controlid + "_Month";
            targetId_temp = targetId + "_Month";
            dataSource = gbl_high_frequency_array_data["M"];
            if (dataSource != null && dataSource.length > 0)
                RemoveFilter(controlid_temp, targetId_temp, dataSource, type, "M");

            controlid_temp = controlid + "_Week";
            targetId_temp = targetId + "_Week";
            dataSource = gbl_high_frequency_array_data["W"];
            if (dataSource != null && dataSource.length > 0)
                RemoveFilter(controlid_temp, targetId_temp, dataSource, type, "W");

            controlid_temp = controlid + "_Day";
            targetId_temp = targetId + "_Day";
            dataSource = gbl_high_frequency_array_data["D"];
            if (dataSource != null && dataSource.length > 0)
                RemoveFilter(controlid_temp, targetId_temp, dataSource, "D");

            controlid_temp = controlid + "_Year";
            targetId_temp = targetId + "_Year";
            dataSource = gbl_high_frequency_array_data["A"];
            if (dataSource != null && dataSource.length > 0)
                RemoveFilter(controlid_temp, targetId_temp, dataSource, type, "A");
        }
        else {
            RemoveFilter(controlid, targetId, dataSource, type,"");
        }

        TrackFeature("Variables->" + getPanelHeading(this) + "->RemoveSearch");
    });

    function RemoveFilter(controlid, targetId, dataSource, type,tab) {
        var jumptolist = $(dataSource).map(function (i, opt) { return opt.JTC; });
        jumptolist = $.unique(jumptolist);

        if (type == "T") {
            gbl_start_var_time = 1;
            gbl_end_var_time = threshold;
            timeDimArray = gbl_display_list[controlid];
            if (gbl_high_freequencyenabled && gbl_selected_time_dim_tab == "hfyear" && tab == "A")
                initSlider(1, timeDimArray.length);
        }

        gbl_remove_search = true;
        loadDimMembers(controlid, targetId, true, dataSource, jumptolist, false);
        gbl_remove_search = false;
        $(targetId).parents(".panel").find(".searchResults").hide();
        $(this).parents(".panel").find(".searchInput").val("");
    }

    $(".removeFilter").click(function () {
        var controlid = $(this).attr("data-source");
        var targetId = $(this).attr("target-id");
        var type = $(this).attr("destination_type");


        $('#_filterTree_' + controlid).find("input.filter-check:checked").trigger('click');


        $(this).parents(".panel").find(".searchInput").val("");
        $(targetId).parents(".panel").find(".searchResults").hide();
        $(targetId).parents(".panel").find(".filterResults").hide();

        $(".showCountryAggOption").removeClass("active");
        $(".showCountryAggOption[data-value='All']").addClass("active");
        if (type == "T") {
            gbl_start_var_time = 1;
            gbl_end_var_time = threshold;
            timeDimArray = gbl_display_list[controlid];
            if (gbl_high_freequencyenabled && gbl_selected_time_dim_tab == "hfyear")
                initSlider(1, timeDimArray.length);
        }
        TrackFeature("Variables->" + getPanelHeading(this) + "->RemoveFilter");
    });
    initPagination();
}

function invokeSearch(controlid, inputId, dataSource, targetId, showPlusIcon) {

    gbl_start_var = 1;
    gbl_end_var = threshold;
    var keyword = $(inputId).val().trim();   

    if (keyword == "") {
        $(inputId).focus();
    }
    else {
        var filtermembers = searchRecordsSV(dataSource, keyword, 'Name');
        var jumptolist = $(filtermembers).map(function (i, opt) { return opt.JTC; });
        jumptolist = $.unique(jumptolist);
        filtermembers.sort(function (a, b) {
            var compA = $(a).attr('JTC');
            var compB = $(b).attr('JTC');
            return (compA < compB) ? -1 : (compA > compB) ? 1 : 0;
        });

        if (gbl_SubnationalFilter && $('#tbl_' + controlid).attr('data-type') === "C") {
            if (gbl_subnational_pagination) {
                var parentList = [];
                filtermembers = LoadSubNationalChildren(controlid, gbl_subnationalHierarchy, null, "", keyword,"");
                parentList = fillHierarchy(filtermembers);
                if (filtermembers.length > 0) {
                    filtermembers = filtermembers.concat(parentList);
                }
                filtermembers.sort(function (a, b) {
                    var compA = $(a).attr('JTC');
                    var compB = $(b).attr('JTC');
                    return (compA < compB) ? -1 : (compA > compB) ? 1 : 0;
                });
            }
            else {
                filtermembers = FindSubNationalChilds(dataSource, filtermembers);
                FindSubnationalParents(filtermembers, dataSource);
            }
        }

        loadDimMembers(controlid, targetId, showPlusIcon, filtermembers, jumptolist, true);
        $(targetId).parents(".panel").find(".searchResults").show();
    }
}

function searchRecordsSV(records, filterKeyword, filterParameter) {
    var filter_or_operator = 1;
    var filterValue = filterKeyword.split(" ");
    var filteredRows = [];

    for (var i = 0; i < filterValue.length; i++) {
        var filterGroup = new $.jqx.filter();
        var filter1 = filterGroup.createfilter('stringfilter', filterValue[i], 'contains');
        filterGroup.addfilter(filter_or_operator, filter1);
        for (var m = 0; m < records.length; m++) {
            var result = filterGroup.evaluate(records[m][filterParameter]) || filterGroup.evaluate(records[m]['Code']);
            if (result)
                filteredRows.push(records[m]);
        }
    }
    filteredRows = unique(filteredRows);
    return (filteredRows);
}


/**************************************************************************************************************************************************/
/********************************************Other dimension functions*****************************************************************************/
/**************************************************************************************************************************************************/
function initJumpToList() {
    $("body").on("click", ".jumpTo", function () {
        var currentScrollPosition;
        var alphabet = $(this).text();
        var scrollId = $(this).parents(".panel").find("li[alphabet=" + alphabet + "]").attr('uniqueid');
        var dataType = $(this).parents(".panel").find('ul.selectedView').attr('data-type');
        var top = 0;
        if (dataType === "C" && gbl_SubnationalFilter)
            top = $('.SubnationalAvailableView div.tabcontent:visible').find("li[alphabet=" + alphabet + "]").position().top;
        else
            top = $(this).parents(".panel").find("li[alphabet=" + alphabet + "]").position().top;

        currentScrollPosition = $(this).parents(".panel").find(".variableList").scrollTop();

        var newScroll = top + currentScrollPosition;        
        $(this).parents(".panel").find(".variableList").animate({ scrollTop: newScroll }, 'slow');   

        if (dataType === "C")
            TrackFeature('Country->Jump to Alphabet->' + alphabet);
        else if (dataType === "S")
            TrackFeature('Series->Jump to Alphabet->' + alphabet);
        else if (dataType === "T")
            TrackFeature('Time->Jump to Alphabet->' + alphabet);
    });
}

function initSelectAll() {
    $("body").on("click", ".selectAll", function (e) {        
        var controlid = $(this).parents(".panel").find(".availableView").attr('data-value');       
        var dataType = $('#tbl_' + controlid).attr('data-type');
        gblselectionChanged[controlid] = true;

        if (gbl_high_freequencyenabled == true && dataType == "T") {
            $(this).parents(".panel").find("#hfvariableList:visible .tabcontent:visible .availableView .chkSelectElement").prop("checked", true);
            $(this).parents(".panel").find("#hfvariableList:visible .tabcontent:visible .availableView li").addClass("selected");
        }
        else {
            if (gbl_SubnationalFilter && dataType == "C") {
                var activetab = $(".variableList").find(".tabcontent:visible").attr('id');
                $(".variableList").find('#' + activetab).find(".chkSelectElement").prop("checked", true);
                $(".variableList").find('#' + activetab).find("div:hidden .chkSelectElement").prop("checked", false);
                $('.SubnationalAvailableView').find('#' + activetab).find(".chkSelectElement").addClass("selected"); 
                $(".variableList").find('#' + activetab).find(".chkSelectElement").trigger("change");                
                $(".variableList").find('#' + activetab).find("div:hidden .chkSelectElement").trigger("change");
            }
            else {
                $(this).parents(".panel").find(".availableView .chkSelectElement").prop("checked", true);
                $(this).parents(".panel").find(".availableView li").addClass("selected");
            }
        }
        setSelections(this);
        TrackFeature("Variables->" + getPanelHeading(this) + "->Select All Dimensions");
    });

    $("body").on("click", ".unselectAll", function (e) {
        var controlid = $(this).parents(".panel").find(".availableView").attr('data-value');     
        var dataType = $('#tbl_' + controlid).attr('data-type');
        gblselectionChanged[controlid] = true;

        if (gbl_high_freequencyenabled == true && dataType == "T") {
            $(this).parents(".panel").find("#hfvariableList:visible .tabcontent:visible .availableView .chkSelectElement").prop("checked", false);
            $(this).parents(".panel").find("#hfvariableList:visible .tabcontent:visible .availableView li").removeClass("selected");
        }
        else {
            if (gbl_SubnationalFilter && dataType == "C") {
                var activetab = $(".variableList").find(".tabcontent:visible").attr('id');
                $(".variableList").find('#' + activetab).find(".chkSelectElement").prop("checked", false);   
                $(".variableList").find('#' + activetab).find(".chkSelectElement").trigger("change");
            }
            else {
                $(this).parents(".panel").find(".availableView .chkSelectElement").prop("checked", false);
                $(this).parents(".panel").find(".availableView li").removeClass("selected");
            }
        }
        removecustomvariables(this);
        setSelections(this);
        TrackFeature("Variables->" + getPanelHeading(this) + "->UnSelect All Dimensions");
    });

    $("body").on("click", ".invertSelection", function (e) {
        var inverseElement;
        
        var controlid = $(this).parents(".panel").find(".availableView").attr('data-value');        
        var dataType = $('#tbl_' + controlid).attr('data-type');
        gblselectionChanged[controlid] = true;

        if (gbl_high_freequencyenabled == true && $('#tbl_' + controlid).attr('data-type') == "T") {
            inverseElement = $(this).parents(".panel").find("#hfvariableList:visible .tabcontent:visible .availableView .chkSelectElement");
        }
        else {
            if (gbl_SubnationalFilter && dataType == "C") {
                var activetab = $(".variableList").find(".tabcontent:visible").attr('id');
                inverseElement = $(".variableList").find('#' + activetab).find(".chkSelectElement");                
            }
            else {
                inverseElement = $(this).parents(".panel").find(".availableView .chkSelectElement");
            }
        }

        inverseElement.each(function () {
            if ($(this).is(":checked")) {
                $(this).prop("checked", false);
                $(this).parents("li").removeClass("selected");
                if (gbl_SubnationalFilter && dataType == "C")
                    $(this).trigger("change");
            }
            else {
                $(this).prop("checked", true);
                $(this).parents("li").addClass("selected");
                if (gbl_SubnationalFilter && dataType == "C")
                    $(this).trigger("change");
            }
        });

        setSelections(this);

        TrackFeature("Variables->" + getPanelHeading(this) + "->Inverse Selection");
    });

    $("body").on("click", ".removeAll", function () {
        var confirmRemoveAll = confirm("Are you sure you want to clear selections for this panel?");
        if (confirmRemoveAll) {
            var dataType = $(this).parents(".panel").find('ul.selectedView').attr('data-type');
            $(this).parents(".panel").find('.noVariableTxt').show();            
            if (gbl_SubnationalFilter && dataType == "C") {
                $(this).parents(".panel").find(".SubnationalAvailableView li").removeClass("selected");
            }
            else {
                $(this).parents(".panel").find(".availableView li").removeClass("selected");
            }
            $(this).parents(".panel").find(".chkSelectElement").prop("checked", false);                  
            removecustomvariables(this);
            setSelections(this);

            TrackFeature("Variables->" + getPanelHeading(this) + "->Remove Selection");
        }
    });
}


function initSelectMembers() {
    $(".variableTable").on("click", ".chkSelectElement", function (e) {        
        var dataType = $(this).parents(".panel").find('ul.selectedView').attr('data-type');
        var selectText;
        var isChecked = $(this).prop("checked");
        if (isChecked){
            $(this).parents("li").addClass("selected");
             selectText = "Select";
        }
        else{
            $(this).parents("li").removeClass("selected");
            selectText = "UnSelect";
        }
        setSelectionChange(this);
        TrackFeature(getPanelHeading(this) + '->' + selectText + ' dimension');
    });

    $(".SubnationalAvailableView").on("click", ".chkSelectElement", function (e) {
        var dataType = $(this).parents(".panel").find('ul.selectedView').attr('data-type');
        var isChecked = $(this).prop("checked");
        if (isChecked){
            selectText = "Select";
            $(this).parents("li").addClass("selected");
        }
        else{
            $(this).parents("li").removeClass("selected");
            selectText = "UnSelect";
        }
        setSelectionChange(this);
        TrackFeature(getPanelHeading(this) + '->' + selectText + ' dimension');
    });

$("#tb-indicatorAggRule").on("click", "select,input", function (e) {               
                $(".selectionModifyTxt").show();
                $("#faded").show();
                if ($(".downloadMsg").is(":visible"))
                    $(".downloadMsg").hide();
            });

$("#divApplyAll").on("click", "select,input", function (e) {               
                $(".selectionModifyTxt").show();
                $("#faded").show();
                if ($(".downloadMsg").is(":visible"))
                    $(".downloadMsg").hide();
            });
}

function buildSelectFilter(filtertype) {
    if (!$('#divMap' + filtertype).hasClass('collapse')) {
        return;
    }
    $('#report-loading').show();

    $.ajax({
        type: "POST",
        async: true,
        url: gbl_basepath + "AjaxServices/AjaxReportMethods.asmx/GetModalMapFilter",
        contentType: "application/json; charset=utf-8",
        data: "{filtertype: '" + filtertype + "'}",
        dataType: "html",
        success: function (data) {
            var JSONData = $.parseJSON(data).d;
            $('#divMap' + filtertype).html(JSONData);

            $('.select-filter-check').off('click');
            $(".select-filter-check").on('click', function () {
                loadSelectFilterItems(this);
            });

            $('#report-loading').hide();
        },
        error: function (XMLHttpRequest, textStatus, errorThrown) {
            $('#report-loading').hide();
            window.location.href = gbl_error_file;
        }
    });
}

/**************************************************************************************************************************************************/
/********************************************Metadata related functions****************************************************************************/
/**************************************************************************************************************************************************/
function initMetadataView() {
    $("#liMetadata").off('click');
    $("#liMetadata").on('click', function () {
        if (hasclearedallselections(false)) {
            return false;
        }

        $("#metadataReportVariables").show();
        $('#liStyles').hide();
        $('#liLayout').addClass('group1');

        if ($('#liEmbed').hasClass('active')) {
            $('#liLayout a').trigger('click');
        }
    });

    $("#liTable, #liChart, #liMap").off('click');
    $("#liTable, #liChart, #liMap").on('click', function () {
        if (hasclearedallselections(false)) {
            return false;
        }

        $("#metadataReportVariables").hide();
        $('#liStyles').show();
        $('#liLayout').removeClass('group1');

        if ($('#liEmbed').hasClass('active')) {
            $('#liLayout a').trigger('click');
        }
    });
}


function loadMetaDataVariable(Name, Code, DimType, DimName) {
    var loadingtext = '<div style="width: 100%; text-align: center;">' + $('#report-loading').html() + '<div>';
    $("#divMetadataCtl div.modal-body").html(loadingtext);
    $('#divMetadataCtl').attr("selection", "variable");
    var cubeid = $('#hdnCubeID').val();
    $.ajax({
        type: "POST",
        url: gbl_report_methods + "/PopulateMetaDataJSON_SV",
        contentType: "application/json; charset=utf-8",
        data: "{cubeid: '" + cubeid + "', name:'" + Name.replace(/\'/g, "%27") + "', code:'" + Code + "', dimensiontype:'" + DimType + "', dimensionname: '" + DimName + "', lang:'" + gbl_common_culture + "'}",
        dataType: "json",
        success: function (data) {
            if (data.d == null || data.d == '') return;
            
            $("#divMetadataCtl div.modal-body").html(data.d);
            if ($('#gdp-meta-data-rpt').length > 0)
                $('#gdp-meta-data-rpt').css('max-height', Math.round($(window).height() * 0.5) + 'px').css('overflow', 'auto');
            else {
                $('#gdp-meta-data').css('max-height', Math.round($(window).height() * 0.5) + 'px').css('overflow', 'auto');
                $('#gdp-meta-data #metadata-specific-data').css('max-height', '').css('overflow', '');
            }
            $('#divMetadataCtl .btn-meta-download').show();

            gbl_download_name = Name;
            gbl_download_code = Code;
            gbl_download_type = DimType;
        },
        error: function (XMLHttpRequest, textStatus, errorThrown) {
            window.location.href = gbl_error_file;
        }
    });
}


/**************************************************************************************************************************************************/
/********************************************Database Listing functions********************************************************************************/
/**************************************************************************************************************************************************/
function loadSelectedDBList(obj) {
    var dimobj = $(obj).parents('.panel-heading').find('.panel-title a')[0];
    loadDatabaseList(dimobj);
}

function loadAvailableDBList(obj) {
    var dimobj = $(obj).parents('.panel-heading').find('.panel-title a')[0];
    loadDatabaseList(dimobj);
}

function loadDatabaseList(obj) {
    //debugger;
    if (obj != null && !$(obj).hasClass('collapsed')) {
        $(obj).parents('.panel-heading').find('.toggleSelectionViews a').removeClass('active');
        return;
    }

    TrackFeature("Variables->Database");

    $('#report-loading').show();

    var controlid = "DBList";
    var hierarchy = "All";

    var dimdata = gbl_array_data[controlid + '_' + hierarchy];
    if (dimdata == null) {
        gbl_array_data[controlid + '_' + hierarchy] = 'Loading'; //to avoid double loading
        var starttime = new Date();

        $.ajax({
            type: "POST",
            async: true,
            url: gbl_report_methods + "/GetDatabaseListJSON",
            contentType: "application/json; charset=utf-8",
            data: "{}",
            dataType: "json",
            success: function (data) {
                //debugger;
                gbl_array_data[controlid + '_' + hierarchy] = data.d;

                createDatabaseList(controlid, hierarchy);

                //logTimeConsumed(controlid + "_" + hierarchy, starttime);

                $('#report-loading').hide();
                initDragDrop();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                gbl_array_data[controlid + '_' + hierarchy] = null;
                $('#report-loading').hide();
                //alert(errorThrown);
                window.location.href = gbl_error_file;
            }
        });
    }
    else {
        if (obj == null) createDatabaseList(controlid, hierarchy); //if we call the function from filter then only we need to repopulate

        $('#report-loading').hide();
    }
}

function createDatabaseList(controlid, hierarchy) {
    var targetId = "#tbl_" + controlid;
    //debugger;

    var dimdata = gbl_array_data[controlid + '_' + hierarchy];
    if (dimdata == null) return;

    if (gbl_array_member_selected[controlid] == null) {
        gbl_array_member_selected[controlid] = dimdata.Sel;
        GenarateAdobeDimensions(controlid);
    }

    loadFilter(controlid, hierarchy, targetId, false, dimdata.Levels);
    loadDimMembers(controlid, targetId, false, dimdata.Members, dimdata.JTL, false);
    getSelectedMembers(controlid, targetId);
}


function loadDatabaseDetails(CubeId,IsPublic) {
    var loadingtext = '<div style="width: 100%; text-align: center;">' + $('#report-loading').html() + '<div>';
    $("#dbMetadata div.modal-body").html(loadingtext);


    $.ajax({
        type: "POST",
        url: gbl_report_methods + "/PopulateDatabaseDetails",
        contentType: "application/json; charset=utf-8",
        data: "{cubeid:'" + CubeId + "', lang:'" + gbl_common_culture + "'}",
        dataType: "json",
        success: function (data) {
            if (data.d === null || data.d === '') return;           
            data.d = data.d.replace(/&lt;/g, "<");
            data.d = data.d.replace(/&gt;/g, ">");
            $("#dbMetadata div.modal-body").html(data.d);

        },
        error: function (XMLHttpRequest, textStatus, errorThrown) {
            window.location.href = gbl_error_file;
        }
    });
}


/**************************************************************************************************************************************************/
/**********************************************Custom member functions*****************************************************************************/
/**************************************************************************************************************************************************/
function addCustomMember(controlid, targetId, objcustom, addtolist, editfunction, showplus, vartext) {
    var member_functionname = objcustom.displayname;

    //debugger;
    if ($(targetId).parent().find(".selectedView li[uniqueId='custom_" + member_functionname + "']").length <= 0) {
        var html = "<li class='selected' uniqueid='custom_" + member_functionname + "'";
        //to handle the case of indicator formula name which is not the uniqueid
        if (objcustom.customdefinition != null && objcustom.customdefinition.formulaname != null) html += " formulaname='" + objcustom.customdefinition.formulaname + "' ";
        html += "> ";
        if (showplus) html += "<span class='glyphicon glyphicon-plus-sign plusIcon'></span> ";
        html += "<span class='deleteIcon glyphicon glyphicon-remove-circle'></span>  ";
        html += "<span class='value'>" + member_functionname + "</span>  ";
        html += "<a href='javascript:void(0)'  class='editLnk'" + "onclick=\"" + editfunction + "('" + controlid + "', '" + member_functionname + "')\"" + ">Edit</a></li>";

        if (addtolist) $(targetId).parent().find(".selectedView").append(html);

        if (objcustom.customdefinition != null && objcustom.customdefinition.periods != null && objcustom.customdefinition.periods.length > 0) {
            $tblavailable = $("#tbl_" + controlid);
            $.each(objcustom.customdefinition.periods, function (index, obj) {
                $tblavailable.find("input[id='chk" + obj.uniquename + "']").prop({ checked: true }).attr("disabled", true);
            });
        }
    }

    if (vartext != '') alert('New Custom ' + vartext + ' added successfully.');

    return html;
}

function addCustomPeriod(controlid) {   
    if (gbl_array_member_selected[controlid] == null) {
        gbl_array_member_selected[controlid] = {};
        GenarateAdobeDimensions(controlid);
    }
    var selectedMembers = gbl_array_member_selected[controlid];    
    var period_functiontype = $('#selPeriodFunctionType').val();
    var period_functionname = $('#txtTimeFunctionName').val().trim();  
    var period_from = $('#selCustomTime_From').val();
    var period_to = $('#selCustomTime_To').val();
    var period_metainfo = $('#txtTimeMetadata').val();
    var period_displaydef = $('#chkTimeDisplayDef').prop('checked');
    var period_mrvorder = $('#selMRVOrder').val();
    var period_mrvlabel = $('#txtMRVLabel').val().trim();
    //if (gbl_common_internal) {
        var period_mrv_hidetitle = $('#chkTimeHideTitle').prop('checked');
        var period_mrv_hidelabel = $('#chkTimeHideLabel').prop('checked');
    //}
    var period_yearfrom = $("#selCustomTime_From option:selected").text();
    var period_yearto = $("#selCustomTime_To option:selected").text();

    var obj_period = {}, obj_period_details = {}, obj_period_old = null;

    if (period_functionname == '') {
        alert('Please enter function title.');
        return;
    }

    obj_period_old = selectedMembers['custom_' + period_functionname];
    if (obj_period_old != null) {
        if (!confirm('Custom Period already exists. Do you want to overwrite?')) {
            return;
        }
    }

    obj_period['displayname'] = period_functionname;
    obj_period['custom'] = true;
    obj_period_details['functiontype'] = period_functiontype;

    if (period_functiontype == "DynYear") {
        //debugger;
        var membersdynamic = $.grep(Object.keys(selectedMembers), function (key, index) {
            return selectedMembers[key].custom == true && selectedMembers[key].customdefinition != null && selectedMembers[key].customdefinition.functiontype.toLowerCase() == "dynyear";
        });
        if (membersdynamic.length > 0 && selectedMembers[membersdynamic[0]].displayname != period_functionname) {
            alert('Only one dynamic period is allowed');
            return;
        }

        var period_totalperiod = $('#selDynPeriodTotal').val();
        var period_latestperiod = $('#selDynPeriodLatest').val();

        obj_period_details['totalperiod'] = period_totalperiod;
        obj_period_details['latestperiod'] = period_latestperiod;

        $('#report-loading').show();
        var ajaxresult = false;
        $.ajax({
            type: "POST",
            async: false,
            url: gbl_report_methods + "/PopulateDynamicYears",
            contentType: "application/json; charset=utf-8",
            data: "{controlid: '" + controlid + "', totalperiods: '" + period_totalperiod + "', latestperiods: '" + period_latestperiod + "'}",
            dataType: "json",
            success: function (data) {
                obj_period_details['periods'] = data.d;
                //debugger;

                $tblavailable = $("#tbl_" + controlid);

                //removing the existing dynamic period in case of edit
                if (obj_period_old != null && obj_period_old.customdefinition != null && obj_period_old.customdefinition.periods != null) {
                    $.each(obj_period_old.customdefinition.periods, function (index, obj) {
                        $tblavailable.find("input[id='chk" + obj.uniquename + "']").prop({ checked: false }).removeAttr("disabled");
                    });
                }
                //debugger;

                //adding the dynamic period and making the checkbox selected with disabled and removing the dnamic years
                //from selected view. In selected view we can see only the dynamic period title
                $.each(data.d, function (index, obj) {
                    //debugger;
                    if ($tblavailable.find("input[id='chk" + obj.uniquename + "']").prop('checked'))
                        $tblavailable.find("input[id='chk" + obj.uniquename + "']").trigger('click');

                    $tblavailable.find("input[id='chk" + obj.uniquename + "']").prop({ checked: true }).attr("disabled", true);
                });

                ajaxresult = true;
                $('#report-loading').hide();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $('#report-loading').hide();
                window.location.href = gbl_error_file;
            }
        });
        if (!ajaxresult) return;
    }
    else {
        obj_period_details['uname_from'] = period_from;
        obj_period_details['uname_to'] = period_to;
        obj_period_details['year_from'] = period_yearfrom;
        obj_period_details['year_to'] = period_yearto;

        obj_period_details['metainfo'] = htmlEncode(period_metainfo);
        obj_period_details['displaydef'] = period_displaydef;

        switch (period_functiontype) {
            case "Exponential":
            case "LeastSquares":
            case "Geometric":
            case "Avg":
            case "Median":
            case "Max":
            case "Min":
            case "Stddev":
            case "Sum":
            case "Variance":
                //nothing to do here for now
                break;
            case "MRV":
                obj_period_details['mrvorder'] = period_mrvorder;
                //if (gbl_common_internal)
                    obj_period_details['mrv_hidetitle'] = period_mrv_hidetitle;
                break;
            case "MRVRight":
            case "MRVLeft":
                if (period_mrvlabel == '') {
                    alert('Please enter MRV Label');
                    return;
                }
                obj_period_details['mrvorder'] = period_mrvorder;
                obj_period_details['mrvlabel'] = period_mrvlabel;
                //if (gbl_common_internal) {
                    obj_period_details['mrv_hidetitle'] = period_mrv_hidetitle;
                    obj_period_details['mrv_hidelabel'] = period_mrv_hidelabel;
                //}
                break;
        }
    }

    obj_period['customdefinition'] = obj_period_details;
    selectedMembers['custom_' + period_functionname] = obj_period;
    GenarateAdobeDimensions(controlid);

    var targetId = "#tbl_" + controlid;
    addCustomMember(controlid, targetId, obj_period, true, "editCustomPeriod", false, 'Period');
    getSelectedCount(controlid, targetId);

    clearCustomPeriod();
    showSelectionsChanged(controlid);
    TrackFeature("Variables->Add Custom Time Period");
}

function editCustomPeriod(controlid, period_functionname) {    
    if (gbl_array_member_selected[controlid] == null) {
        gbl_array_member_selected[controlid] = {};
        GenarateAdobeDimensions(controlid);
    }
    var selectedMembers = gbl_array_member_selected[controlid];
    
    var obj_period = selectedMembers['custom_' + period_functionname];
    var obj_period_details = obj_period.customdefinition;

    $('#txtTimeFunctionName').val(period_functionname);
    $('#selPeriodFunctionType').val(obj_period_details['functiontype']);
    if ($('#selPeriodFunctionType').val() == "DynYear") {
        $('#selDynPeriodTotal').val(obj_period_details['totalperiod']);
        $('#selDynPeriodLatest').val(obj_period_details['latestperiod']);
    }
    else {
        $('#selCustomTime_From').val(obj_period_details['uname_from']);
        $('#selCustomTime_To').val(obj_period_details['uname_to']);        
        $('#txtTimeMetadata').val(htmlDecode(obj_period_details['metainfo']));
        $('#chkTimeDisplayDef').prop({ checked: obj_period_details['displaydef'] });
        switch (obj_period_details['functiontype']) {
            case "MRV":
                $('#selMRVOrder').val(obj_period_details['mrvorder']);
                //if (gbl_common_internal)
                    $('#chkTimeHideTitle').prop({ checked: obj_period_details['mrv_hidetitle'] });
                break;
            case "MRVRight":
            case "MRVLeft":
                $('#selMRVOrder').val(obj_period_details['mrvorder']);
                $('#txtMRVLabel').val(obj_period_details['mrvlabel']);
                //if (gbl_common_internal) {
                    $('#chkTimeHideTitle').prop({ checked: obj_period_details['mrv_hidetitle'] });
                    $('#chkTimeHideLabel').prop({ checked: obj_period_details['mrv_hidelabel'] });
                //}
                break;
        }
    }

    $("#selPeriodFunctionType").trigger('change');


    if ($("#createTimeFunctionAcc").parents("#zoomModalBody").hasClass("modal-body")) {

        $("#zoomModalBody").find(".openBtnModal").trigger("click");


    }

    if ($('#createTimeFunctionAcc div div.panel-heading a[href="#createTimeFunction"]').hasClass('collapsed')) {
         $('#createTimeFunctionAcc div div.panel-heading a[href="#createTimeFunction"]').trigger('click');
    }

    TrackFeature("Variables->Edit Custom Time Period");


}

function clearCustomPeriod() {
    $('#txtTimeFunctionName').val('');
    $('#txtMRVLabel').val('');
    $('#txtTimeMetadata').val('');
    $('#chkTimeDisplayDef').prop({ checked: false });
    //if (gbl_common_internal) {
        $('#chkTimeHideTitle').prop({ checked: false });
        $('#chkTimeHideLabel').prop({ checked: false });
    //}
        TrackFeature("Variables->Clear Custom Time Period");
}

function initCustomPeriodSettings() {
    $("#selPeriodFunctionType").change(function () {
        var value = $(this).val();
        var dimtype = $(this).parents(".panel").find(".availableView").attr("data-type");
        switch (value) {
            case "MRV":
                $("#rowSpan").show();
                $("#rowOrder").show();
                $("#rowLabel").hide();
                $("#rowDynPeriod").hide();
                $('#divTimeHideTitle').show();
                $('#divTimeHideLabel').hide();
                $('#divTimeAddtOptions').show();
                break;
            case "MRVRight":
            case "MRVLeft":
                $("#rowSpan").show();
                $("#rowOrder").show();
                $("#rowLabel").show();
                $("#rowDynPeriod").hide();
                $('#divTimeHideTitle').show();
                $('#divTimeHideLabel').show();
                $('#divTimeAddtOptions').show();
                break;
            case "DynYear":
                $("#rowSpan").hide();
                $("#rowOrder").hide();
                $("#rowLabel").hide();
                $("#rowDynPeriod").show();
                $('#divTimeHideTitle').hide();
                $('#divTimeHideLabel').hide();
                $('#divTimeAddtOptions').hide();
                break;
            default:
                $("#rowSpan").show();
                $("#rowOrder").hide();
                $("#rowLabel").hide();
                $("#rowDynPeriod").hide();
                $('#divTimeHideTitle').hide();
                $('#divTimeHideLabel').hide();
                $('#divTimeAddtOptions').show();
        }

        TrackFeature('Variables->' + getPanelHeading(this) + '->Create Time Function->Type-> ' + value);
    });
}


function showSelectionsChanged(controlid) {
    if ($("#divNoDataToDisplay").is(":hidden")) {
        $("#faded").show();
        var position = $("#panel_" + controlid).position();
        $(".selectionModifyTxt").show();
        if ($(".downloadMsg").is(":visible"))
            $(".downloadMsg").hide();
        $(".selectionModifyTxt").attr("panel-id", "#panel_" + controlid);
        //        $(".selectionModifyTxt").css({ "top": ((position.top > 20 ? position.top : 90) - 20) + "px" });
    }
    else {
        var isDimensionSelected = 0;
        $(".selectionCountRHS").each(function () {
            var val = eval($(this).text());
            if (val == null || val < 1 || val == '') {
                isDimensionSelected++;
            }
        });
        if (isDimensionSelected > 0)
            $("#applyChangesNoPreview").addClass("disabled");
        else
            $("#applyChangesNoPreview").removeClass("disabled");
    }
}

/**************************************************************************************************************************************************/
/********************************************Not reviewed functions********************************************************************************/
/**************************************************************************************************************************************************/


$(document).ready(function () {
    positionElements();
    //  resetVariables();
    $(".collapsedOption").click(function () {
        $(this).hide();
        $(this).next().show();
    });
    $(".expandedOption h4").click(function () {
        $(this).parent().hide();
        $(this).parent().siblings(".collapsedOption").show();
    });


    showVariableDropdown();

    togglFilter();

    checkSelectedPageLoad();

    initTreeView();

    $("#tableView").show();
    viewToggler();

    //                initDragDrop();
    addSelectedClass();
    hideOnDocClick();
    //    $("input[type=text]").ezpz_hint();
    showToolTip();

    $(window).resize(function () {
        positionElements();

        if ($("#zoomView").hasClass("in")) {
            adjustVariableListWidth();
        }
    });

    toggleSelectionView();
    showAvailableSelectedView();
    showPlusIconOnExpand();
    radioBtnTab();

    //    slider();
    viewRecentYears();
    cloneDivs();
    showAdditionalOptions();



    $(".tree").on("click", ".toggleList", function () {
        $(this).toggleClass("open");
        $(this).parent(".parentNode").siblings(".childNodes").slideToggle();

    });
    $(".tree").on("click", ".toggleListText", function () {
        $(this).siblings(".toggleList").toggleClass("open");
        $(this).parent(".parentNode").siblings(".childNodes").slideToggle();

    });



    $(".dxgvTable_GridDefaultTheme tr:first-child").show();

    $('.rptdbheader').on('click', function () {
        var cubeid = $('#hdnCubeID').val();
        var isPublic = gbl_isCubePublic;         
        loadDatabaseDetails(cubeid, isPublic);
    });

});


function showVariableDropdown() {
    $(".toggleDropDown,.dropDownWrapper,.filterTree,.toggleFilter").click(function (e) {

        if ($(this).hasClass('toggleFilter')) TrackFeature("Variables->" + getPanelHeading(this) + "->Filter");

        e.stopPropagation();
    });



    $(".toggleDropDown,.dropDownWrapper").click(function (e) {
        e.stopPropagation();
    });



}

function show(showMe) {
    $(showMe).css("visibility", "visible");
    $(".dropDownWrapper").slideUp();
}

function hide(hideMe) {
    $(hideMe).css("visibility", "hidden");
}

function cancel(cancel) {
    $(cancel).slideUp();
}


function togglFilter() {
    //    $(".toggleFilter,.toggleDropDown").click(function () {
    //        $(".dropDownWrapper,.filterTree").slideUp();
    //        $(this).next().slideToggle();
    //    });
    $(".toggleDropDown,.toggleFilter").click(function () {
        //        $(".dropDownWrapper").hide();
        $(this).next().slideToggle();
    });
}

function openCustomDiv(ListId, DivId, checkId, className) {
    // $(ListId).html(" ");
    $(checkId).is(":checked") ? $(DivId).show() : $(DivId).hide();
    //  populateFormulaDiv(ListId, className);
}

function resetVariables() {
    $("input[type=checkbox],input[type=radio]").removeAttr("checked");
}

function checkSelectedPageLoad() {
    $(".chkSelectElement").prop("checked", false);
    //    $(".chkSelected,.selectDb").each(function () {
    //    $(this).prop("checked",true);
    //
    //    });
    $(".variableTable li.selected").each(function () {
        $(this).find(".chkSelectElement").prop("checked", true);
    });
}


function checkSelected(listId) {
    oldList = fetchOldSelection(listId);

    $(".chkSelected").each(function () {

        chkBoxId = "#" + $(this).attr("id");

        var selectionChkBox = "#select_" + chkBoxId.split("_")[1];
        if ($(chkBoxId).is(":checked")) {

            $(selectionChkBox).prop("checked", true);
            $(selectionChkBox).parent().addClass("selected");
        }
        else {

            $(selectionChkBox).prop("checked", false);
            $(selectionChkBox).parent().removeClass("selected");

        }
    });

}

function checkSelectedDb(text) {
    text = text.trim();
    $("#databaseTable").find("li").removeClass("selected");
    $("#databaseTable").find(".value").each(function () {
        if ($(this).text().trim() == text) {
            $(this).parents("li").addClass("selected");
            $(this).siblings(".selectDb").prop("checked", true);
            return false;
        }
    });

}

function deleteItem(item) {
    $(item).parent().remove();
    TrackFeature("Variables->" + getPanelHeading(item) + "->Remove " + $(item).parent().text() + " from custom group");
}

function clearField(item) {
    $(item).html("");
    $(item).val("");
}

function resetCustomGrpSel() {

    //    $("body").on("click", ".reset", function () {
    //        var confirmClear = confirm("Are you sure you want to clear all selections?");
    //        if (confirmClear) {
    //            clearField('#customGroupCountries');
    //            clearField('#customGroupTitle')
    //            $(".selectVar").each(function () {
    //                $(this).prop("checked", false);

    //            });
    //        }

    //    });
}


function populateFormulaDiv(target, className) {


}


function checkBoxSelection() {
    $(".variableTable").on("click", ".selectCountry,.selectSeries", function (e) {

        if ($(this).is(":checked")) {

            $(this).parent().addClass("selected");

        }
    });
}

function populateSelectionList(target, source) {
    $(target).html("");
    $(source).find(".chkSelectElement").each(function () {

        if ($(this).is(":checked")) {
            var chkId = $(this).attr("id").split("_")[1];

            var liItem = selectionItemStr + chkId + "'/> " + $(this).next().html() + "</li>";

            $(target).append(liItem);
        }
    });
}

function populateDbSelectionList() {
    $("#databaseTable").find(".selectDb").each(function () {
        if ($(this).is(":checked")) {
            $("#selectedDb").text($(this).siblings(".value").text().trim());
        }
    });
}


function initTreeView() {
    $(".selector,.masterSelector").prop("checked", false);
    $(".masterSelector").on("click", function () {
        if ($(this).is(":checked")) {
            $(this).parent().next().find(".selector").prop("checked", true);
        }
        else {
            $(this).parent().next().find(".selector").prop("checked", false);

        }

    });
    $(".selector").on("click", function () {
        if ($(this).is(":checked")) {
            $(this).parents(".childNodes").find(".selector").each(function () {
                var allChecked = $(this).prop("checked");
                if (allChecked == true) {
                    $(this).parents(".childNodes").siblings(".parentNode").find(".masterSelector").prop("checked", true);

                }
                if (allChecked == false) {
                    $(this).parents(".childNodes").siblings(".parentNode").find(".masterSelector").prop("checked", false);

                    return false;
                }
            })
        }
        else {
            $(this).parents(".childNodes").siblings(".parentNode").find(".masterSelector").prop("checked", false);
        }
    });
}


function viewToggler() {
    $(".closeBtn").on("click", function () {
        //        $(".colCanvas").addClass("fullView");
        //        $(".colTools").css("display", "none");
        //        $(".closeBtn").css("display", "none");
        //        positionElements();
        //        $(".colCanvas").trigger('resize');
        $(this).hide();
        $(".openBtn").show();


        $(".jqx-splitter-collapse-button-vertical").trigger("click");
    });

    $(".openBtn").on("click", function () {
        //        $(".colCanvas").removeClass("fullView");
        //        $(".colTools").css("display", "block");
        //        $(".closeBtn").css("display", "block");
        //        positionElements();
        //        $(".colCanvas").trigger('resize');
        $(this).hide();
        $(".closeBtn").show();

        $(".jqx-splitter-collapse-button-vertical").trigger("click");
    });



    $('#splitter').on('collapsed', function (event) {
        $(".tools").hide();
    });


    $('#splitter').on('expanded', function (event) {
        $(".tools").show();
    });
}



function initDragDrop() {
    $(".variableTable.availableView li").draggable({
        appendTo: "body",
        helper: "clone",
        cursor: "move", cursorAt: { top: 0, left: 0 }
    });   

    //alert("drag");
    $(".customGroupElements").droppable({

        activeClass: "ui-state-default",

        hoverClass: "ui-state-hover",

        accept: ":not(.ui-sortable-helper)",

        drop: function (event, ui) {

            $(this).find(".placeholder").remove();

            //$("<li></li>").html("<span class='glyphicon glyphicon-remove'></span>" + ui.draggable.text()).appendTo(this);
            var item = "<li><a href='javascript:void(0)' onclick='deleteItem(this)' ><span class='glyphicon glyphicon-remove-circle'></span></a>" + ui.draggable.text() + "</li>";
            $(this).append(item);

            $("#faded").show();
            $(".selectionModifyTxt").show();
            if ($(".downloadMsg").is(":visible"))
                $(".downloadMsg").hide();
        }

    }).sortable({

        items: "li:not(.placeholder)",

        sort: function () {

            // gets added unintentionally by droppable interacting with sortable

            // using connectWithSortable fixes this, but doesn't allow you to customize active/hoverClass options

            $(this).removeClass("ui-state-default");

        }

    });

    $("#metadataCountryTable").sortable({
        revert: true
    });
    $("#metadataAttrTable").sortable({
        revert: true
    });

    $("body").on("click", "#chartOrientationOption", function (e) {
        $("#chartCustomOrientationList").sortable({
            revert: true
        });
    });

}


function addSelectedClass() {

    $("#databaseTable").on("click", ".selectDb", function (e) {

        $("#databaseTable").find("li").removeClass("selected");
        var isChecked = $(this).prop("checked");
        if (isChecked) {
            $(this).parents("li").addClass("selected");

        }
        else $(this).parents("li").removeClass("selected");
    });
}

function hideOnDocClick() {
    $(document).click(function () {
        $(".dropDownWrapper,.filterTree").hide();
    });
}

function toggleSelectionView() {
    $("body").on("click", ".expandPanel", function () {
        if (!($(this).hasClass("collapsed"))) {
            $(this).parents(".panel-heading").find(".showAvailable").removeClass("active");
            $(this).parents(".panel-heading").find(".showSelected").removeClass("active");
            $('#nonMetadataReportVariables').on('hidden.bs.collapse', function () {
                if ($(".selectionModifyTxt").is(":visible")) {
                    var panelId = $(".selectionModifyTxt").attr("panel-id");
                    var position = $(panelId).position();
                }
            });
        }
        else {
            $('#nonMetadataReportVariables').on('shown.bs.collapse', function () {
                if ($(".selectionModifyTxt").is(":visible")) {
                    var panelId = $(".selectionModifyTxt").attr("panel-id");
                    var position = $(panelId).position();
                }
            });
        }
    });

    $(".panel.panel-default").on("click", ".showAvailable", function (e) {
        $(this).parents(".panel.panel-default").find(".selectedView").hide();        
        $(this).parents(".panel").find(".availableView").show();
        $(this).parents(".panel").find(".SubnationalAvailableView").show();
        $(this).parents(".panel").find(".availableViewTools").show();
        $(this).parents(".panel").find(".selectedViewTools").hide();
        $(this).parents(".panel.panel-default").find(".dimensionHolderInner").removeClass("variableTableSelectionView");
        $(".panel-title.pull-left.main-title-panel a").addClass("collapsed");
        $(".selectedDimensionPanel").removeClass("in").addClass("collapse");
        $(".showAvailable,.showAvailableMeta").removeClass("active");
        $(this).addClass("active");
        $(".showSelected,.showSelectedMeta").removeClass("active");
        if ($(this).parents(".panel").find(".panel-title a").hasClass("collapsed")) {            
            $(this).parents(".panel").find(".panel-title a").removeClass("collapsed");
            $(this).parents(".panel").find(".selectedDimensionPanel").removeClass("collapse").addClass("in");
            $(this).parents(".panel").find(".selectedDimensionPanel").css("height", "auto");
            return;
        }
    });

    $("#zoomModalHeader").on("click", ".showAvailable", function (e) {
        $("#zoomModalHeader").find(".showSelected").removeClass("active");
        $(this).addClass("active");
        $(this).parents("#zoomModalHeader").siblings("#zoomModalBody").find(".selectedView").hide();
        $(this).parents("#zoomModalHeader").siblings("#zoomModalBody").find(".SubnationalAvailableView").show();
        $(this).parents("#zoomModalHeader").siblings("#zoomModalBody").find(".availableView").show();
        $(this).parents(".modal-content").find(".dimensionHolderInner").removeClass("variableTableSelectionView");

        $(this).parents("#zoomModalHeader").siblings("#zoomModalBody").find(".availableViewTools").show();
        $(this).parents("#zoomModalHeader").siblings("#zoomModalBody").find(".selectedViewTools").hide();
    });

    $("#zoomModalHeader").on("click", ".showSelected", function (e) {

        $("#zoomModalHeader").find(".showAvailable").removeClass("active");
        $(this).addClass("active");        
        $(this).parents("#zoomModalHeader").siblings("#zoomModalBody").find(".SubnationalAvailableView").hide();
        $(this).parents("#zoomModalHeader").siblings("#zoomModalBody").find(".availableView").hide();
        $(this).parents("#zoomModalHeader").siblings("#zoomModalBody").find(".selectedView").show(function () {
            if ($(this).parents(".panel").find("#ascendingChkBox").prop("checked")) {
            }
            else {
                $(this).parents(".panel").find(".selectedView").sortable({
                    revert: true,
                    stop: function (event, ui) {
                        $(".selectionModifyTxt").show();
                        $("#faded").show();
                        if ($(".downloadMsg").is(":visible"))
                            $(".downloadMsg").hide();
                    }
                });
            }
            myhelper = function (e) {
                return $('span', $(e)).text();
            }

            $("body").on("click", ".sort.asc", function () {
                sortAllSelectedItems($(this).parents(".panel").find('.selectedView'), true);
                $(this).removeClass("asc").addClass("desc");
                if ($("#divNoDataToDisplay").is(":hidden")) {
                    $("#faded").show();
                    $(".selectionModifyTxt").show();
                }
                TrackFeature("Variables->" + getPanelHeading(this) + "->Sort Selection");
            });

            $("body").on("click", ".sort.desc", function () {
                sortAllSelectedItems($(this).parents(".panel").find('.selectedView'), false);
                $(this).removeClass("desc").addClass("asc");
                if ($("#divNoDataToDisplay").is(":hidden")) {
                    $("#faded").show();
                    $(".selectionModifyTxt").show();
                }
                TrackFeature("Variables->" + getPanelHeading(this) + "->Sort Selection");
            });

            $("body").on("click", ".deleteIcon", function () {
                var uniqueId = $(this).parents("li").attr("uniqueid");
                var dataType = $(this).parents("ul.selectedView").attr("data-type");
                if (uniqueId.indexOf('custom_') < 0) {
                    if (gbl_SubnationalFilter && dataType == "C") {
                        $(this).parents(".panel").find(".SubnationalAvailableView li[uniqueid='" + uniqueId + "']").removeClass("selected");
                        $(this).parents(".panel").find(".SubnationalAvailableView li[uniqueid='" + uniqueId + "']").find(".chkSelectElement").prop("checked", false);
                    }
                    else {
                        $(this).parents(".panel").find(".availableView li[uniqueid='" + uniqueId + "']").removeClass("selected");
                        $(this).parents(".panel").find(".availableView li[uniqueid='" + uniqueId + "']").find(".chkSelectElement").prop("checked", false);
                    }
                }
                setSelectionChangeEx(this, false, ".selectedView");
                $(this).parents("li").remove();
                var removedItem = $(this).parents("li").children('span.value').prop('innerText');
                TrackFeature("Variables->" + getPanelHeading(this) + "->Remove selection->" + removedItem );
            }); 
        });
        $(this).parents(".modal-content").find(".dimensionHolderInner").addClass("variableTableSelectionView");
        $(this).parents("#zoomModalHeader").siblings("#zoomModalBody").find(".availableViewTools").hide();
        $(this).parents("#zoomModalHeader").siblings("#zoomModalBody").find(".selectedViewTools").show();
    });

    $(".panel.panel-default").on("click", ".showSelected", function (e) {        
        $(".panel-title.pull-left.main-title-panel a").addClass("collapsed");
        $(".selectedDimensionPanel").removeClass("in").addClass("collapse");
        $(this).parents(".panel").find(".availableView").hide();        
        $(this).parents(".panel").find(".SubnationalAvailableView").hide();
        $(this).parents(".panel").find(".availableViewTools").hide();
        $(this).parents(".panel").find(".selectedViewTools").show();
        $(this).parents(".panel").find(".selectedView").show(function () {
            if ($(this).parents(".panel").find("#ascendingChkBox").prop("checked")) {
            }
            else {
                $(this).parents(".panel").find(".selectedView").sortable({
                    revert: true,
                    stop: function (event, ui) {
                        $(".selectionModifyTxt").show();
                        $("#faded").show();
                        if ($(".downloadMsg").is(":visible"))
                            $(".downloadMsg").hide();
                    }
                });
            }
            myhelper = function (e) {
                return $('span', $(e)).text();
            }

            $("body").on("click", ".sort.asc", function () {
                sortAllSelectedItems($(this).parents(".panel").find('.selectedView'), true);
                $(this).removeClass("asc").addClass("desc");
                if ($("#divNoDataToDisplay").is(":hidden")) {
                    $("#faded").show();
                    $(".selectionModifyTxt").show();
                }
                TrackFeature("Variables->" + getPanelHeading(this) + "->Sort Selection");
            });

            $("body").on("click", ".sort.desc", function () {
                sortAllSelectedItems($(this).parents(".panel").find('.selectedView'), false);
                $(this).removeClass("desc").addClass("asc");
                if ($("#divNoDataToDisplay").is(":hidden")) {
                    $("#faded").show();
                    $(".selectionModifyTxt").show();
                }
                TrackFeature("Variables->" + getPanelHeading(this) + "->Sort Selection");
            });

            $("body").on("click", ".deleteIcon", function () {
                var uniqueId = $(this).parents("li").attr("uniqueid");
                var dataType = $(this).parents("ul.selectedView").attr("data-type");
                if (uniqueId.indexOf('custom_') < 0) {
                    if (gbl_SubnationalFilter && dataType == "C") {
                        $(this).parents(".panel").find(".SubnationalAvailableView li[uniqueid='" + uniqueId + "']").removeClass("selected");
                        $(this).parents(".panel").find(".SubnationalAvailableView li[uniqueid='" + uniqueId + "']").find(".chkSelectElement").prop("checked", false);
                    }
                    $(this).parents(".panel").find(".availableView li[uniqueid='" + uniqueId + "']").removeClass("selected");
                    $(this).parents(".panel").find(".availableView li[uniqueid='" + uniqueId + "']").find(".chkSelectElement").prop("checked", false);
                }
                setSelectionChangeEx(this, false, ".selectedView");

                $(this).parents("li").remove();
            });           
        });
        /************************************************************************************************************/

        $(this).parents(".panel.panel-default").find(".dimensionHolderInner").addClass("variableTableSelectionView");
        $(".showSelected, .showSelectedMeta").removeClass("active");
        $(this).addClass("active");
        $(".showAvailable,.showAvailableMeta").removeClass("active");
        if ($(this).parents(".panel").find(".panel-title a").hasClass("collapsed")) {            
            $(this).parents(".panel").find(".panel-title a").removeClass("collapsed");
            $(this).parents(".panel").find(".selectedDimensionPanel").removeClass("collapse").addClass("in");
            $(this).parents(".panel").find(".selectedDimensionPanel").css("height", "auto");
            return;
        }
    });


    $("body").on("click", "#ascendingChkBox", function () {
        if ($(this).prop("checked")) {
            $(this).parents(".panel").find(".selectedView").sortable("disable");

            myhelper = function (e) {
                return $('span', $(e)).text();
            }
            var controlid = $(this).parents(".panel").find(".availableView").attr('data-value');            
            sortTimeAscending($(this).parents(".panel").find("#timedimvariableList .selectedView"));            
        }
        else {
            $(this).parents(".panel").find(".selectedView").sortable({ revert: false,
                stop: function (event, ui) {
                    $(".selectionModifyTxt").show();
                    $("#faded").show();
                    if ($(".downloadMsg").is(":visible"))
                        $(".downloadMsg").hide();
                }
            });
        }
    });
}

function showAvailableSelectedView() {
    $("#selection").on("click", ".panel-title a", function (e) {
        $(".showAvailable").removeClass("active");
        $(".showSelected").removeClass("active");

        //        $(".panel").find(".variableTable li").show();
        //        $(".panel").find(".variableTable li.selected").show();
        $(this).parents(".panel").find(".availableView").show();
        $(this).parents(".panel").find(".selectedView").hide();

        $(this).parents(".panel").find(".availableViewTools").show();
        $(this).parents(".panel").find(".selectedViewTools").hide();

        $(this).parents(".panel").find(".showAvailable").addClass("active");

        $(this).parents(".panel").find(".showAvailableMeta").addClass("active");
    });
}

function showPlusIconOnExpand() {
    $('.changeIcon').on('show.bs.collapse', function () {
        $(this).parents(".panel").find(".variableTable").addClass("customGroupView");
        $(this).parents(".panel").find(".SubnationalAvailableView").addClass("customGroupView"); 
    });
    $('.changeIcon').on('hide.bs.collapse', function () {
        $(this).parents(".panel").find(".variableTable").removeClass("customGroupView");
        $(this).parents(".panel").find(".SubnationalAvailableView").removeClass("customGroupView");
    });
}

function radioBtnTab() {
    $("body").on("click", ".radioBtnTabs", function (e) {
        var target = "#" + $(this).attr("data-target");
        $(this).parents(".btn-group").siblings(".radioTabContentWrapper").find(".radioTabContent").hide();
        $(target).show();

    });

    $("body").on("click", ".radioBtnTabsInner", function (e) {
        dimtype = $(this).parents(".panel").find(".availableView").attr("data-type");
        var target = "#" + $(this).attr("data-target");
        $(this).parents(".btn-group-inner").siblings(".radioTabContentInner").hide();
        $(target).show();
        if(target == "#divApplyAll")
            TrackFeature('Variables->' + getPanelHeading(this) + '->Define Aggreagation Rule->Apply Same rule for all indicators');
        else if(target == "#divChooseForAll")
            TrackFeature('Variables->' + getPanelHeading(this) + '->Define Aggreagation Rule->Set rule for each indicator');
    });
}

function appendIndicator() {
    var row = "";

    $("#seriesTable li.selected").each(function () {
        var indicator = $(this).find(".value").text();

        row = row + "<tr><td>" + indicator + "</td>" + "\n" +
           "<td><select><option>None</option><option>Mean</option> <option>Median</option><option>Min</option> <option>Sum</option></select></td>" + "\n" +
           "<td><select><option>None</option></select></td>" + "\n" +
           "<td> <input type='text' class='form-control' /></td></tr>";
    });

    $("#tb-indicatorAggRule tbody").html(row);
}

function getHeaderFooterHeight() {
    var hdr_ftr_height = $('#bannerStrip').outerHeight();
    hdr_ftr_height += $(".language ul li").length > 0 ? $('.language').outerHeight() : 0;
    hdr_ftr_height += $('.secondaryHeader').outerHeight();
    hdr_ftr_height += $('.footerStrip').outerHeight();
    hdr_ftr_height += 16;//for padding
    //debugger;
    return hdr_ftr_height;
}

function positionElements() {
    var windowH = $(window).height();
    var windowW = $(window).width();

    var previewH = (windowH - 130);
    $(".preview").css("min-height", previewH + "px");

    //$('.tools').css('min-height', $(window).height() - hdr_ftr_height);
    $(".colTools").css("min-height", (windowH - getHeaderFooterHeight()) + "px");

    $(".reportPlaceholder").css("width", ($(".colCanvas").width() - 45) + "px");


    var offset = $(".colCanvas").offset();
    var x = offset.left;
    var y = offset.top;
    $("#fixedLayout").css({ "top": y, "left": x });
}

function showToolTip() {
    $(".showToolTip").tooltip({ placement: 'bottom' });



    if (gbl_common_culture == "ar") {

        $(".toolTipLeft").tooltip({ placement: 'left' });
        $(".toolTipRight").tooltip({ placement: 'right' });


    }

    else {

        $(".toolTipLeft").tooltip({ placement: 'right' });
        $(".toolTipRight").tooltip({ placement: 'left' });


    }

}


/***************************************************************JQXWIDGET START HERE *************************************************************/


function initAutoCompleteVar(textboxId, dataSource, displayMember) {
    var dataAdapter = new $.jqx.dataAdapter(dataSource);
    $(textboxId).jqxInput({ placeHolder: "Search", height: 24, width: '85%', minLength: 1, source: dataAdapter, displayMember: displayMember, items: 8 });

}






function initSlider(minValue, maxValue) {
    $("#slider-range").slider({
        range: true,
        min: minValue,
        max: maxValue,
        values: [minValue, maxValue],
        slide: function (event, ui) {

        },
        stop: function (event, ui) {
            $(this).parents(".variableListWrapper").find(".searchResults").show();
            var min = $("#slider-range").slider("values", 0);
            var max = ($("#slider-range").slider("values", 1));

            gbl_start_var_time = 1;
            gbl_end_var_time = threshold;            
            var controlid = $(this).attr("data-source");
            var targetId = $(this).attr("target-id");
            var timedataSourse = timeDimArray;          

            if (gbl_high_freequencyenabled == true && $('#tbl_' + controlid).attr('data-type') == "T") {
                controlid = GetHighFrequencyControlId(controlid);
                targetId = GetHighFrequencyTargetId(targetId);  
                timedataSourse = GetHighFrequencyDataSource();  
            }
            LoadSlider(controlid, targetId, timedataSourse,ui)           
        }
    });


}

function LoadSlider(controlid, targetId, timedataSourse, ui)
{
    var selected_time_range = [];
    var dataSource = {
        dataType: "json",
        dataFields: [
            { name: 'ID', type: 'string' },
            { name: 'Code', type: 'string' },
            { name: 'Name', type: 'string' },
            { name: 'JTC', type: 'string' },
            { name: 'SM', type: 'boolean' }
        ],
        localdata: timedataSourse
    };

    var dataAdapter = new $.jqx.dataAdapter(dataSource, {
        loadComplete: function (records) {
            var records = dataAdapter.records;
            var length = records.length;
            records = records.reverse();

            for (var i = ui.values[0] - 1; i < ui.values[1]; i++) {
                selected_time_range.push(records[i]);
                if (i == ui.values[0] - 1) {
                    startText = (records[i]['Name']);
                }
                if (i == (ui.values[1] - 1)) {
                    endText = (records[i]['Name']);
                }
            }

            $("#year").text(endText + " - " + startText);
        }

    });
    dataAdapter.dataBind();
    selected_time_range.reverse();
    stringBuilder_Time(controlid, targetId, false, selected_time_range);
}



/*********************************************************************************************************/
/*********************************************************************************************************/
/*********************************************************************************************************/
/*********************************************************************************************************/
/*********************************************************************************************************/

function getSelected(allselected, n) {
    for (var index = 0; index < allselected.length; index++) {
        switch (allselected[index].datalevel) {
            case "1":
                if (allselected[index].datavalue == n.Level1Code) return true;
                break;
            case "2":
                if (allselected[index].datavalue == n.Level2Code) return true;
                break;
            case "3":
                if (allselected[index].datavalue == n.Level3Code) return true;
                break;
            case "4":
                if (allselected[index].datavalue == n.Level4Code) return true;
                break;
        }
    }

    return false;
}

function getMemberList(members) {
    var memberlist = "";
    $.each(members, function (index, value) {
        memberlist += '<li>';
        memberlist += '<a data-toggle="modal" data-target="#seriesMetaDataModal"><span class="glyphicon glyphicon-eye-open metadataIcon sprite icon-info"></span></a>';
        memberlist += '<span class="glyphicon glyphicon-plus-sign plusIcon"></span>';
        memberlist += '<input type="checkbox" id="select_ind_' + value.IndicatorCode + '" class="chkSelectElement" />';
        memberlist += '<span class="value">' + value.IndicatorName + '</span>';
        memberlist += '</li>';
    });
    $('#seriesTable').html(memberlist);
}

function getFilterLevels(value) {
    var hierarchylist = '';

    hierarchylist += '<li>';
    switch (value.Level) {
        case 1:
            hierarchylist += '<div class="parentNode">';
            hierarchylist += "<span class='toggleList'></span>";
            //            hierarchylist += '<a href="javascript:void()" class="toggleList"></a>';
            hierarchylist += '<input type="checkbox" class="masterSelector filter-check" data-value="' + value.UniqueID + '" data-level="' + value.Level + '" />' + value.Name + '</div>';
            break;
        case 2:
        case 3:
        case 4:
            hierarchylist += '<input type="checkbox" class="selector filter-check" data-value="' + value.UniqueID + '" data-level="' + value.Level + '" />' + value.Name;
            break;
    }

    if (value.Hierarchies.length > 0) {
        hierarchylist += '<ul class="childNodes level' + value.Level + '">';
        $.each(value.Hierarchies, function (index1, value1) {
            hierarchylist += getFilterLevels(value1);
        });
        hierarchylist += '</ul>';
    }

    hierarchylist += '</li>';

    return hierarchylist;
}




function viewRecentYears() {
}

function cloneDivs() {


    $("body").on("click", ".closeZoomModal", function () {

        var destination = $(this).attr("destination_panel");

        var destinationDimHolder = $(destination).find(".dimensionHolder");

        $("#zoomModalBody .dimensionHolderInner").appendTo(destinationDimHolder);

        //        var count = $(".panel-collapse.selectedDimensionPanel.in .variableTable li.selected").length;

        var count = $(destination).find(".variableTable li.selected").length;


        var target = $(destination).siblings(".panel-heading").find(".statsWrapper");


        $("#zoomModalHeader .statsInner").appendTo(target);

        //        $(destination).parents(".panel").find(".expandPanel").trigger("click");

        //        $(".panel-collapse.selectedDimensionPanel.in").siblings(".panel-heading").find(".selectionCount").text(count);

        $(destination).find(".variableList").css("max-height", "250px");
        $(destination).find(".modal-leftCol").css({ "width": "100%" });
        $(destination).find(".modal-rightCol").css({ "width": "100%" });
        $(destination).find(".modal-rightCol").show();

        $("#ul-addMoreDimension").appendTo(".addRemoveVariables");
        $(".addMoreHiddenDiv").show();

        //        var previewOn = window.location.href;
        //        if (previewOn.indexOf("preview=off") >= 0) {
        //            listUnselectedVariables(false);
        //        }
        //        var previewcurrent = getCookie('preview');
        //        if (previewcurrent == 'N' || previewcurrent == '') {

        //
        //            listUnselectedVariables(false);
        //        }

        listUnselectedVariables(false);

        $("#faded").hide();

    });


    $("body").on("click", ".zoom", function () {

        $(".addMoreHiddenDiv").show();
        $(".closeZoomModal").attr("destination_panel", destinationPanel);
        var destinationPanel = $(this).attr("destination_panel");
        var target = $(this).attr("target_panel");
        if ($(this).parents("#zoomModalHeader").hasClass("modal-header")) {
            var transferTo = $(".closeZoomModal").attr("destination_panel");
            var destinationDimHolder = $(transferTo).find(".dimensionHolder");
            $("#zoomModalBody .dimensionHolderInner").appendTo(destinationDimHolder); 
            var count = $(transferTo).find(".variableTable li.selected").length;
            var targetStats = $(transferTo).siblings(".panel-heading").find(".statsWrapper");
            $("#zoomModalHeader .statsInner").appendTo(targetStats);
            $(transferTo).find(".variableList").css("max-height", "250px");
            $(transferTo).find(".modal-leftCol").css({ "width": "100%" });
            $(transferTo).find(".modal-rightCol").css({ "width": "100%" });
            $(transferTo).find(".modal-rightCol").show();
            $("#ul-addMoreDimension").appendTo(".addRemoveVariables");
        }        
        $(".closeZoomModal").attr("destination_panel", destinationPanel);
        $("#ul-addMoreDimension").appendTo("#zoomModalHeader");
        $(target).find(".statsInner").appendTo("#zoomModalHeader");
        var paneltarget = $(this).attr('target_panel');
        var heading = $(paneltarget + ' .panel-heading h4.panel-title a').text();
        if (heading == null) heading = "";
        heading = heading.trim();
        $(target).find(".dimensionHolderInner").appendTo("#zoomModalBody");
        $("#zoomModalBody").attr("destination-panel", target);
        $("#zoomModalBody").css("height", $(window).height() - 200);
        $("#zoomModalBody .variableList").css("max-height", $(window).height() - 315);

        if ($("#zoomModalBody .variableTable").hasClass("table-dimension-T")) {
            $("#zoomModalBody .variableList").css("max-height", $(window).height() - 390);
        }
        $("#zoomModalTitle").text(heading);

        if ($("#zoomModalBody").find(".variableTable.availableView").hasClass("customGroupView")) {
            $("#zoomModalBody").find(".modal-leftCol").css("width", "70%");
            $("#zoomModalBody").find(".modal-rightCol").css("width", "25%");
            $("#zoomModalBody").find(".modal-rightCol").show();
            $("#zoomModalBody").find(".closeBtnModal").show();
            $("#zoomModalBody").find(".openBtnModal").show();
            if ($(this).attr("destination_type") == 'M') {
                $("#zoomModalBody .viewToggler.openBtnModal").hide();
                $("#zoomModalBody .viewToggler.closeBtnModal").hide();
            }
        }
        else {
            $("#zoomModalBody").find(".modal-leftCol").css("width", "95%");
            $("#zoomModalBody").find(".modal-rightCol").hide();
            $("#zoomModalBody").find(".closeBtnModal").hide();
            $("#zoomModalBody").find(".openBtnModal").show();
            if ($(this).attr("destination_type") == 'T') {
                $("#zoomModalBody").find(".openBtnModal").show();               
            }
        }
        var liToHide = $(this).attr("parent-li");
        $(liToHide).hide();
        $("#zoomModalBody .variableTable").css("max-height", $(window).height() - 315);
        adjustVariableListWidth();
        $("#zoomModalBody .tree").css("max-height", $(window).height() - 330);
        TrackFeature("Variables->" + getPanelHeading(this) + "->Open Zoom out window");
    });

    $('#zoomView').on('shown.bs.modal', function () {
        $("#zoomModalBody .variableList").css("max-height", $(window).height() - 315);
        if ($("#zoomModalBody .variableTable").hasClass("table-dimension-T")) {
            $("#zoomModalBody .variableList").css("max-height", $(window).height() - 345);
        }
        $("#zoomModalBody .tree").css("max-height", $(window).height() - 330);
        
        adjustVariableListWidth();
    });

    $('#zoomView').on('hidden.bs.modal', function () {
        $(".variableList").css("max-height", "");
        $(".variableList").width("100%");
        $(".tree").css("max-height", "");

    });
}

function adjustVariableListWidth() {
    if ($("#zoomModalBody .variableTable").attr("data-type") == 'S' || $("#zoomModalBody .variableTable").attr("data-type") == 'C' || $("#zoomModalBody .variableTable").attr("data-type") == 'T' && $("#zoomModalBody .variableTable").attr("data-type") == 'O') {
        $("#zoomModalBody").find(".variableList").width($("#zoomModalBody .modal-leftCol").width() - $("#zoomModalBody").find(".filterTree").width() - 5 + "px");        
    }
    if ($("#zoomModalBody .variableTable").attr("data-type") == 'T' && gbl_high_freequencyenabled) {
        if ($("#zoomModalBody").find(".variableList"))
            $("#zoomModalBody").find(".variableList").width('100%');
    }
}

function showAdditionalOptions() {

    $("body").on("click", ".showAdditionalOptions", function () {
        $(this).toggleClass("active");
        $(this).next().slideToggle();

    });


    $("#zoomModalBody").on("click", ".openBtnModal", function () {

        $(this).hide();
        $(this).siblings(".closeBtnModal").show();
        $(this).parents(".modal-body").find(".modal-leftCol").css("width", "60%");
        $(this).parents(".modal-body").find(".modal-rightCol").css("width", "35%");
        $(this).parents(".modal-body").find(".modal-rightCol").show();

        $(this).parents(".modal-body").find(".variableList").addClass('modal-custom-open');

        adjustVariableListWidth();
    });
    $("#zoomModalBody").on("click", ".closeBtnModal", function () {

        $(this).hide();
        $(this).siblings(".openBtnModal").show();
        $(this).parents(".modal-body").find(".modal-leftCol").css("width", "95%");
        $(this).parents(".modal-body").find(".modal-rightCol").hide();

        $(this).parents(".modal-body").find(".variableList").removeClass('modal-custom-open');

        adjustVariableListWidth();
    });



}





/***************Please move it to appropriate file **************/
function setIframeDimension() {
    $('#createCustomThemeModal').on('shown.bs.modal', function (e) {       
        /******Temporary Work- around to set the height properly **/
        //        var originalSrc = $("#customTableHolder").attr("src");
        //        $("#customTableHolder").attr("src", originalSrc);
        /***********************************************/
        //$("#customTableHolder").attr("width", $('#createCustomThemeModal .modal-content').width() - 40);
        //$("#customTableHolder").attr("height", $('#createCustomThemeModal').height() - 220);

        $("#customTableHolder").attr("width", $('#createCustomThemeModal .modal-content').width() - 50);
        $("#customTableHolder").attr("height", $('#createCustomThemeModal .modal-content').height() - 100);
        
        //console.log('$("#customTableHolder").attr("height") -- ' + $("#customTableHolder").attr("height"));
        if(typeof ($('#customTableHolder')[0].contentWindow.adjustFrameHeight) == typeof (Function))
            $('#customTableHolder')[0].contentWindow.adjustFrameHeight();
    });
}

function moveAddMoreLinksToRHS() {

    $(".addMoreHiddenDiv").each(function () {
        $(this).appendTo("#ul-addMoreDimension");

    });



}

function triggerClickOnEnter() {

    $(".searchInput").keyup(function (event) {
        if (event.keyCode == 13) {



            $(this).next().click();



        }
    });
}

function sortAllSelectedItems(ul, isascending) {
    var listitems = ul.children('li').get();
    var datatype = ul.attr('data-type');

    if (datatype == 'O') {
        if (!isascending) {
            listitems.sort(function (a, b) {
                var compA = $(a).attr('uniqueid');
                var compB = $(b).attr('uniqueid');
                return (compA > compB) ? -1 : (compA < compB) ? 1 : 0;
            });
        } else {
            listitems.sort(function (a, b) {
                var compA = $(a).attr('uniqueid');
                var compB = $(b).attr('uniqueid');
                return (compA < compB) ? -1 : (compA > compB) ? 1 : 0;
            });
        }
    }
    else {
        if (!isascending) {
            listitems.sort(function (a, b) {
                if(gbl_high_freequencyenabled && datatype == "T"){
                    var compA = $(a).attr('orderby');
                    var compB = $(b).attr('orderby');
            }
            else{
                var compA = $(a).find('span.value').text().toUpperCase();
                var compB = $(b).find('span.value').text().toUpperCase();
            }
                return (compA > compB) ? -1 : (compA < compB) ? 1 : 0;
            });
        } else {
            listitems.sort(function (a, b) {
                if(gbl_high_freequencyenabled && datatype == "T"){
                    var compA = $(a).attr('orderby');
                    var compB = $(b).attr('orderby');
                }
                else{
                    var compA = $(a).find('span.value').text().toUpperCase();
                    var compB = $(b).find('span.value').text().toUpperCase();
                }                
                return (compA < compB) ? -1 : (compA > compB) ? 1 : 0;
            });
        }
    }

    $.each(listitems, function (idx, itm) { ul.append(itm); });
}

function sortTimeAscending(ul) {
    var listitems = ul.children('li').get();
    listitems.sort(function (a, b) {
        var compA = $(a).find('span.value').text().toUpperCase();
        var compB = $(b).find('span.value').text().toUpperCase();
        return (compA < compB) ? -1 : (compA > compB) ? 1 : 0;
    });
    $.each(listitems, function (idx, itm) { ul.append(itm); });
}




function createPagerDropdown(controlid, display_list) {
    var length = display_list.length;

    var numberOfPages = Math.ceil(length / threshold);

    var option = "";
    for (var i = 1; i <= numberOfPages; i++) {

        option += "<option>" + i + "</option>";

    }
    $("#goTo_" + controlid).html("");
    $("#goTo_" + controlid).append(option);

}


function toggleFilterHierarchy() {
    //    alert();
    //    $("body").on("click", ".toggleList", function () {

    //        alert();

    //    });

}
function gridRenderingSettings() {




    $(".dxgvTable_GridDefaultTheme tr:first-child").show();




    if (gbl_common_culture == "ar") {
        $(".dxgvFCSD").scrollLeft("0");
    }

    else {
        $(".dxgvFCSD").scrollLeft($(".dxgvFCSD div").width());

    }

}

/************************Code for Sub-national Poverty database **************/

function showSubnationals(controlid, data, hierarchy) {    
    $('#newSelection_' + controlid + ' #SubNAtionalButtonGrp').show();    
    $("#CtryAgg_Classification_" + controlid).hide();
    $('.SubnationalAvailableView').show();

    CreateSubNationalTabs(data.Members, controlid, data.Levels, hierarchy);

    $("body").on("click", ".SubnationalAvailableView li span.bookunit", function () {
        var dataType = $(this).parents(".panel").find('ul.selectedView').attr('data-type');
        var expandElement = $($(this).parent('li')).children('span.caret-n');
        if (expandElement !== null && dataType === "C" && gbl_SubnationalFilter) {
            ShowSubnationalList(expandElement, controlid,hierarchy);
        }
    });

    $("body").on("click", ".caret-n", function () {
        var dataType = $(this).parents(".panel").find('ul.selectedView').attr('data-type');
        if (dataType = "C" && gbl_SubnationalFilter) {           
            ShowSubnationalList($(this), controlid, hierarchy);            
        }
        else {
            var nationalCode = $(this).parents(".national").attr("parent");
            $(this).toggleClass("caret-n-open");
            $(".subnational[child='" + nationalCode + "']").toggle();
            $(this).parents(".national").find(".nationalName").toggle();
        }        
    });

    $("body").on("click", ".selectAllSub", function () {
        var nationalCode = $(this).parents(".national").attr("parent");
        $(".subnational[child='" + nationalCode + "']").find(".chkSelectElement").prop("checked", false);
        $(".subnational[child='" + nationalCode + "']").find(".chkSelectElement").trigger("click");
        $(this).parents(".national").find(".chkSelectElement").prop("checked", false);
        $(this).parents(".national").find(".chkSelectElement").trigger("click");
        if (!($(this).parents(".national").find(".closed").hasClass("caret-n-open"))) {
            $(this).parents(".national").find(".closed").trigger("click");
        }
    });

    $("body").on("click", ".unselectAllSub", function () {
        var nationalCode = $(this).parents(".national").attr("parent");
        $(".subnational[child='" + nationalCode + "']").find(".chkSelectElement").prop("checked", true);
        $(".subnational[child='" + nationalCode + "']").find(".chkSelectElement").trigger("click");
        $(this).parents(".national").find(".chkSelectElement").prop("checked", true);
        $(this).parents(".national").find(".chkSelectElement").trigger("click");
        if (!($(this).parents(".national").find(".closed").hasClass("caret-n-open"))) {
            $(this).parents(".national").find(".closed").trigger("click");
        }
    });
}

function CreateSubNationalTabs(data, controlid, Levels, hierarchy) {
    var category;
    //var level = Math.max.apply(Math, data.map(function (o) { return o.Level; }));
    var btnhtml = "<div class='btn-group' data-toggle='buttons'>";
    var tabContentHtml = "<div id='All' class='tabcontent'></div >";
    if (gbl_subnational_singleView) { // Render both ALL tab and element container for subnational. But the tab will be hidden
        btnhtml += "<label style='display:none' data-customlink='sf:body' level= 'All' id = 'defaultSubnationalTab' onclick=\"openSubNationalTab(event, 'All', '" + hierarchy + "')\" class='btn active'>";
        btnhtml += "<input type='radio' id='defaultOpen' checked='checked' />All</label>";
        tabContentHtml += "<div id='Level_0' class='tabcontent'></div >";
        btnhtml += "</div>";
    }
    else {
        btnhtml += "<label data-customlink='sf:body' level= 'All' id = 'defaultSubnationalTab' onclick=\"openSubNationalTab(event, 'All', '" + hierarchy + "')\" class='btn active'>";
        btnhtml += "<input type='radio' id='defaultOpen' checked='checked' />All</label>";
        for (var i = 0; i < Levels.length; i++) {
            category = Levels[i].HN;
            if (category === null || category.trim() === "" || category.trim().toUpperCase() === "NULL") {
                category = "Level " + (i);
            }
            btnhtml += "<label data-customlink='sf:body' level='Level_" + i + "' onclick=\"openSubNationalTab(event, 'Level_" + i + "', '" + hierarchy + "')\" class='btn'>";
            btnhtml += "<input type='radio' checked='checked'/>" + category + "</label >";
            tabContentHtml += "<div id='Level_" + i + "' class='tabcontent'></div >";
        }
        btnhtml += "</div>";
    }
    $('#newSelection_' + controlid + ' #SubNAtionalButtonGrp').html(btnhtml);
    $('#newSelection_' + controlid + ' .SubnationalAvailableView').html(tabContentHtml);
}
/************************Code for Sub-national Poverty database **************/


function initBookAttributes() {
    $.ajax({
        type: "POST",
        async: true,
        url: gbl_report_methods + "/PopulateBookAttributesJSON",
        contentType: "application/json; charset=utf-8",
        data: "{}",
        dataType: "json",
        success: function (data) {
            gbl_array_book_attributes = eval(data.d);
            
        },
        error: function (XMLHttpRequest, textStatus, errorThrown) {
            window.location.href = gbl_error_file;
        }
    });
}

function validateBookUnits() {
    var isValidBookunits = true;
    var selectedBookDetailsArray = [];
    var selectedUniqueIdArray = [];
    var controlid = $('.variableTable.selectedView[data-type="S"]').attr('data-value')
    var targetId = "#tbl_" + controlid;
    $(targetId).parent().find(".selectedView li").each(function (i, n) {
        selectedUniqueIdArray.push($(n).attr('uniqueid'));
    });

    if (selectedUniqueIdArray.length == 0) {

        $.ajax({
            type: "POST",
            async: false,
            url: gbl_report_methods + "/PopulateSelectedIndicatorsJSON",
            contentType: "application/json; charset=utf-8",
            data: "{}",
            dataType: "json",
            success: function (data) {
                var selectedIndicators = eval(data.d);
                for (var prop in selectedIndicators) {
                    selectedUniqueIdArray.push(selectedIndicators[prop].uniquename);
                }
            }

        });
    }

    for (rowid = 0; rowid < selectedUniqueIdArray.length; rowid++) {
        selectedBookDetailsArray.push($.grep(gbl_array_book_attributes, function (obj, ind) { return obj.seriesId == selectedUniqueIdArray[rowid]; }));
    }
    var distinctUniqueNames = [];
    var bookUnitCount = 0;
    var emptyBookUnitCount = 0;
    for (i = 0; i < selectedBookDetailsArray.length; i++) {
        if (selectedBookDetailsArray[i].length > 0) {
            if (distinctUniqueNames.indexOf(selectedBookDetailsArray[i][0].bookUnit) === -1) {
                distinctUniqueNames.push(selectedBookDetailsArray[i][0].bookUnit);
                bookUnitCount++;
            }
        }
        else
            emptyBookUnitCount++;
    }
    if ((bookUnitCount > 0 && emptyBookUnitCount > 0) || bookUnitCount > 1)
        isValidBookunits = false;

    return isValidBookunits;

}

function CloseOpenedTimeSection()
{
    if(gbl_high_freequencyenabled && $('div#panel_IFS_Time a[title=Time]'))
    {
        if(!$('div#panel_IFS_Time a[title=Time]').hasClass("collapsed"))
        {
            $('div#panel_IFS_Time a[title=Time]').click();
        }
    }
}

function LoadCustomTime(memberlist)
{     
    var length = memberlist.length;
    var html_ddlto = "", html_ddlfrom = "";
            
    for (var q = 0; q < length; q++) {                    
        var opthtml = '<option value="' + memberlist[q].ID + '">' + memberlist[q].Name + '</option>';
        html_ddlto += opthtml;
        html_ddlfrom = opthtml + html_ddlfrom;
    }
            
    $('#selCustomTime_From').html(html_ddlfrom);
    $('#selCustomTime_To').html(html_ddlto);
}

function GenarateAdobeDimensions(controlid)
{   
    if (controlid) {
        var dimNameList = [];
        var currentDim = gbl_array_member_selected[controlid];
        var adobeDim = JSON.parse($('#hdnAbobeText').val());
        if (adobeDim !== null && adobeDim.Dimensions !== null) {
            if (currentDim === null || currentDim.length === 0) {
                adobeDim.Dimensions[controlid] = {};
            }
            else {
                $.each(currentDim, function (key, val) {
                    dimNameList.push(val.displayname);
                });

                adobeDim.Dimensions[controlid] = dimNameList;
            }
        }

        $('#hdnAbobeText').val(JSON.stringify(adobeDim));
        CreateAdobeText(adobeDim);
    }
}



